{ "reportType": "RUBY-PMD" , "data": {
  "metadata": {
    "rubocop_version": "0.39.0",
    "ruby_engine": "ruby",
    "ruby_version": "2.2.4",
    "ruby_patchlevel": "230",
    "ruby_platform": "x64-mingw32"
  },
  "files": [
    {
      "path": "Gemfile",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 2,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 2,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 2,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "2 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "merge_xml.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 8,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 10,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 4,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 53,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 4,
            "length": 77
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 59,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 4,
            "length": 65
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 51,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 4,
            "length": 74
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 57,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 4,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 55,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 24,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 48,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 46,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 17,
            "length": 14
          }
        }
      ]
    },
    {
      "path": "rakefile.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer `$CHILD_STATUS` from the stdlib 'English' module over `$?`.",
          "cop_name": "Style/SpecialGlobalVars",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 57,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 1,
            "length": 4
          }
        }
      ]
    },
    {
      "path": "config/site_config.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 29,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 14,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 11,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 14,
            "length": 67
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 14,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 13,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 16,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 17,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 17,
            "length": 66
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 17,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 14,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 14,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 8,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 16,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 12,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 12,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "9 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 1,
            "length": 9
          }
        }
      ]
    },
    {
      "path": "config/test_config.rb",
      "offenses": [
        {
          "severity": "fatal",
          "message": "unterminated string meets end of file\n(Using Ruby 2.0 parser; configure using `TargetRubyVersion` parameter, under `AllCops`)",
          "cop_name": "Syntax",
          "corrected": false,
          "location": {
            "line": 211,
            "column": 59,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/action_builder_steps/action_builder_end_to_end.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "1 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/action_builder_steps/action_builder_regression_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 98,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 113,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 129,
            "length": 39
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `s1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `when` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 41,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 65,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 41,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 62,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 40,
            "column": 45,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 57,
            "column": 75,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 57,
            "column": 106,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 58,
            "column": 15,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 61,
            "column": 75,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 61,
            "column": 103,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 62,
            "column": 15,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 76,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 92,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 47,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 54,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 8,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 88,
            "column": 3,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 89,
            "column": 3,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 89,
            "column": 25,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 90,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `cat_count`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 96,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 109,
            "column": 52,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 8,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 8,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 165,
            "column": 8,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 8,
            "length": 56
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 8,
            "length": 56
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 8,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 6,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 183,
            "column": 3,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 193,
            "column": 50,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 200,
            "column": 89,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 201,
            "column": 118,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 215,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 217,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 217,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 8,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 8,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 8,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 8,
            "length": 56
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 8,
            "length": 56
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 227,
            "column": 8,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 228,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 233,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 244,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 269,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 270,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 273,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 273,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 274,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 274,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 274,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 280,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 281,
            "column": 3,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 281,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 281,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 284,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 285,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 285,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 285,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 286,
            "column": 53,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 287,
            "column": 54,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 288,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 289,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 290,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 291,
            "column": 57,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 293,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 297,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 297,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 300,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 300,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 301,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 301,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 309,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 309,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 310,
            "column": 8,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 311,
            "column": 50,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 314,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 314,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 321,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 330,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 348,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 348,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 359,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 359,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 365,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/action_builder_steps/action_builder_smoke_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 169,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 170,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 190,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 2,
            "length": 155
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 33,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 126,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 60, 4 is not aligned with `if` at 54, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 66,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 169,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 66,
            "column": 170,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 190,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 127,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 82,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 82,
            "column": 127,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Put one space between the method name and the first argument.",
          "cop_name": "Style/SpaceBeforeFirstArg",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Put one space between the method name and the first argument.",
          "cop_name": "Style/SpaceBeforeFirstArg",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 254,
            "column": 19,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 258,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 259,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 259,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 262,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 264,
            "column": 5,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 266,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 268,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 268,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 276,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 276,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 282,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 282,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 288,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 288,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 294,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 294,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 300,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 300,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 315,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 317,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 5,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 321,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 322,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 327,
            "column": 11,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 327,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 332,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 336,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 337,
            "column": 3,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 337,
            "column": 25,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 338,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 341,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 341,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `cat_count`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 343,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 344,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 347,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 347,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 351,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 360,
            "column": 27,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 363,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 365,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 365,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 367,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 373,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 376,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 376,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 381,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 381,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 384,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 384,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 384,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 384,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 384,
            "column": 129,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 384,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 391,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 391,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 391,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 391,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 391,
            "column": 127,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 391,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 395,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 395,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 399,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 401,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 401,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 402,
            "column": 8,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 403,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `source`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 411,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 414,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 416,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 419,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 419,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 433,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 437,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 437,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 450,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 451,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 467,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 480,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 485,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 485,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 5) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 497,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 5) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 500,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 500,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 500,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 503,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 503,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 511,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 512,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 513,
            "column": 6,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 513,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 514,
            "column": 16,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 515,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 515,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 515,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `if`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 519,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 520,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 520,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 522,
            "column": 9,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 524,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 524,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 526,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 527,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 6) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 528,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 528,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 529,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 529,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 533,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 533,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 535, 0 is not aligned with `outputs.each{ |options|` at 527, 5.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 535,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 536,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 547,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 549,
            "column": 5,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `<=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 549,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 550,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 550,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 551,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 555, 2 is not aligned with `if` at 549, 4.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 555,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 565,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 568,
            "column": 5,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `<=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 568,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 569,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 570,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 571,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 575,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 575,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 576,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 576,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 577, 2 is not aligned with `if` at 568, 4.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 577,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 582,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 583,
            "column": 6,
            "length": 876
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 583,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 584,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 584,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 585,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 585,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 586,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 588,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 589,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 589,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 592,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 592,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 595,
            "column": 6,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 610,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 610,
            "column": 157,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 613,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/api_integrator_steps/api_integrator_end_to_end.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 33,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 120,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/api_integrator_steps/api_integrator_regression_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 94,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 109,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 122,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `s1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 13,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `when` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 41,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 65,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 41,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 62,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 46,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 8,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 3,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 22,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 48,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 78, 2 is not aligned with `Then(/^Verify cancel popup message and confirmation buttons$/) do` at 74, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 37,
            "length": 85
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 4,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 8,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 8,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 8,
            "length": 55
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 9,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 9,
            "length": 44
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 108,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 113,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 8,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 8,
            "length": 54
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 124,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 129,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 136,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 148,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 7,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 94,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 94,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 195,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 196,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 196,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 197,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 197,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/api_integrator_steps/api_integrator_smoke_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 5,
            "length": 314
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 19, 2 is not aligned with `if` at 14, 4.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 143,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 5,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 5,
            "length": 321
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 131, 2 is not aligned with `timeout_options.each { |option|` at 127, 4.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 159,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 165,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 165,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `before_search_count`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 168,
            "column": 3,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 186,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 187,
            "column": 3,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 187,
            "column": 22,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 188,
            "column": 8,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 189,
            "column": 48,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 207,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 219,
            "column": 96,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 234,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 234,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 244,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 244,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 251,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 259,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 259,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 263,
            "column": 35,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 270,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 270,
            "column": 96,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 270,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 273,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 278,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 278,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 284,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 294,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 294,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 299,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 299,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 316,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 316,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 320,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 321,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 325,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 339,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 339,
            "column": 121,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 344,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 344,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 349,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 349,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 350,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 350,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 351,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 351,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 361,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 361,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 361,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 361,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 361,
            "column": 143,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 361,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 367,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 367,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 368, 2 is not aligned with `Then(/^verify manage access button in the page$/) do` at 365, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 373,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 373,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 374,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 374,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 376,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 376,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 382,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 386,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 387,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 390,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 390,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 396,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 397,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 397,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 400,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 401,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 404,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 404,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 408,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 408,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 414,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 414,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 426,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 426,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 428,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 428,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 435,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 435,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 441,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 441,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 452,
            "column": 5,
            "length": 3300
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 453,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 454,
            "column": 38,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 454,
            "column": 125,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 156,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 456,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 456,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 462,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 463,
            "column": 38,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 463,
            "column": 125,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 156,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 465,
            "column": 75,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 465,
            "column": 105,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 466,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 468,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 469,
            "column": 75,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 469,
            "column": 108,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 469,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 470,
            "column": 41,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 472,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 473,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 473,
            "column": 38,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 473,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 473,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 473,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 473,
            "column": 131,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 473,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 481,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 41,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 488,
            "column": 43,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 488,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 488,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 488,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `when`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 497,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 498,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 499, 3 is not aligned with `case` at 452, 4.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 499,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 500,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 505,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 505,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 513,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 513,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 514,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 522,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 522,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 529,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 529,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 532,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 532,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 532,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 532,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 532,
            "column": 127,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 532,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 533,
            "column": 2,
            "length": 624
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 534,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 535,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 536,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 537,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 538,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 539,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 540, 2 is not aligned with `case` at 533, 1.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 540,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 543,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 546,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 547,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 547,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 551,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 551,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 553,
            "column": 38,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 553,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 553,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 553,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 553,
            "column": 125,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 553,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 41,
            "length": 85
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 557,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 558,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 558,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 562,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 562,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 565,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 565,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 567,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 568,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 570,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 570,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 574,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 574,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 577,
            "column": 38,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 577,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 577,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 577,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 577,
            "column": 131,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 577,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 580,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 582,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 582,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 586,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 586,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 589,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 589,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 591,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 592,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 593,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 593,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 596,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 597,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 597,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 600,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 601,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 601,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 605,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 605,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 611,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 612,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 612,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 616,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 617,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 617,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 621,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 621,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 625,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 625,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 626,
            "column": 47,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `when`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 627,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 632,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 635,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 635,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 642,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 642,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 643,
            "column": 8,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 644,
            "column": 48,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 645,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 645,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 651,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 655,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 658,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 661,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 661,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 661,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 666,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 666,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 666,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 670,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 670,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 670,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 677,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 677,
            "column": 62,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 680,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 683,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 683,
            "column": 58,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 685,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 687,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 689,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 693,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 37,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 702,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 37,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 708,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 168,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 708,
            "column": 169,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 189,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 200,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 713,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 713,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 713,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 713,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 713,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 714,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 714,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 723,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 723,
            "column": 71,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 723,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 723,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 723,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 723,
            "column": 104,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 723,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 724,
            "column": 37,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 729,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 729,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 732,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 732,
            "column": 71,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 732,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 732,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 732,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 732,
            "column": 111,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 732,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 733,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 733,
            "column": 11,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 733,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 736,
            "column": 71,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 736,
            "column": 101,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 737,
            "column": 37,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 740,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 740,
            "column": 84,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 157,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 740,
            "column": 158,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 178,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 741,
            "column": 71,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 741,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 741,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 741,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 741,
            "column": 101,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 741,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 742,
            "column": 11,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 744,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 744,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 744,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 744,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 744,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 745,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 745,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 748,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 748,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 750,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 750,
            "column": 37,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 750,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 750,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 750,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 751,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 751,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 756,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 756,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 764,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 764,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 768,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 768,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 774,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 774,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 791,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 791,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 791,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 792,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 793,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 794,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `searchresults`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 795,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 795,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 797,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 797,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 802, 1 is not aligned with `Then(/^Add user roles to the list$/) do` at 790, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 802,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 805,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 805,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `searchresults`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 809,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 809,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 811,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 811,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 815,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 819,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 819,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 824,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 824,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 837,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 837,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 842,
            "column": 42,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 846,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 848,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 849,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 849,
            "column": 17,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 851,
            "column": 15,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 853,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 853,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 78,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 858,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 859,
            "column": 65,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 862,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 862,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 865,
            "column": 78,
            "length": 6
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 867, 4 is not aligned with `case` at 848, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 867,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 868, 2 is not aligned with `Then(/^Update (.*?) section in manage access popup/) do |field|` at 847, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 868,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 872,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 872,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 876,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 876,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 878,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 878,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 881,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 886,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 887,
            "column": 16,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 889,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 890,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 890,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 890,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 891,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 891,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 892,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 893,
            "column": 52,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 898,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 903,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 903,
            "column": 27,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 907,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 913,
            "column": 15,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 916,
            "column": 58,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 917,
            "column": 15,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 918,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 918,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 918,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 918,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 918,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 918,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 920,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 920,
            "column": 27,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 922,
            "column": 58,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 923,
            "column": 18,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 934,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 934,
            "column": 16,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 935,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 935,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 935,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 937,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 937,
            "column": 15,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 938,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 938,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 938,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 939,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 15,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 942,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 18,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 944,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 944,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 944,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 945,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 946, 4 is not aligned with `case` at 933, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 946,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 946,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 950,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 951,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 951,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 956,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 956,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 956,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 957,
            "column": 67,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 962,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 962,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 966,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 966,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 968,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 968,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 976,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 976,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 980,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 980,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 982,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 982,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 985,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 989,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 989,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 992,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 992,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 996,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 996,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 998,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 998,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1005,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1005,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1008,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1008,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1012,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1012,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1014,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1014,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1017,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 1026,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/process_builder_steps/process_builder_dynamic_variables.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 47,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 90,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 47,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 90,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 16,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@expandable_status.include? 'not expandable'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 12,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@selected_input.include? 'Define New Value for this Process'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 176,
            "column": 10,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Move `@status = (@key_type == 'backspace key') ? (@remove_token.message_textarea.send_keys :backspace) : (@remove_token.message_textarea.send_keys :delete)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 199,
            "column": 5,
            "length": 149
          }
        },
        {
          "severity": "convention",
          "message": "Move `@status = (@key_type == 'backspace key') ? (@remove_token.message_textarea.send_keys :backspace) : (@remove_token.message_textarea.send_keys :delete)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 202,
            "column": 5,
            "length": 149
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 57,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 273,
            "column": 16,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 300,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 301,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 42,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 326,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 11,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 95,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 381,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 427,
            "column": 16,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Move `@edit.close_of_action_popup.click` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 445,
            "column": 5,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Move `@edit.close_of_action_popup.click` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 450,
            "column": 5,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Space before keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 513,
            "column": 65,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `seperator`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 530,
            "column": 77,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 541,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.subject_text.attribute('textContent').include? 'Send SMS_qe'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 560,
            "column": 10,
            "length": 66
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@popup_text_value.delete(' ')).to include(@main_text.delete(' ')), 'The member Id button is clicked'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 591,
            "column": 5,
            "length": 107
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@popup_text_value.delete(' ')).to include(@main_text.delete(' ')), 'The member Id button is clicked'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 594,
            "column": 5,
            "length": 107
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 598,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `item_value`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 609,
            "column": 59,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 613,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 623,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 631,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 632,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 645,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 651,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 656,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 657,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 679,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 686,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 687,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 689,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `arg1`. You can omit all the arguments if you don't care about them.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 694,
            "column": 82,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `arg2`. You can omit all the arguments if you don't care about them.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 694,
            "column": 88,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 695,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 701,
            "column": 14,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 706,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 707,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 707,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `text_content`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 714,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `tag_content.include?'&nbsp;'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 715,
            "column": 10,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 715,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `process_value`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 724,
            "column": 87,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `analytic1_text`. Did you mean `analytic2_text`?",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 805,
            "column": 3,
            "length": 14
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `analytic2_text`. Did you mean `analytic1_text`?",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 806,
            "column": 3,
            "length": 14
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `current_analytic1_text`. Did you mean `current_analytic2_text`?",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 815,
            "column": 3,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 815,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 815,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 71,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `true_first1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 865,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 867,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `true_second1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 869,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `false_first1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 874,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 876,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `false_second1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 878,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `true_first2`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 891,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 893,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `true_second2`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 895,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `false_first2`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 900,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `false_second2`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 904,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 945,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/process_builder_steps/process_builder_end_to_end.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 6,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@action_name.include? \"#{ADD_ACTION}\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 127,
            "column": 12,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@action_name.include? \"#{ACTION_NAME_EDIT}\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 130,
            "column": 12,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 34,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@action_name.include? \"#{NEW_FRIENDLY_NAME}\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 131,
            "column": 12,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 34,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 27,
            "length": 11
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `char`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 229,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 6,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 301,
            "column": 36,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 576,
            "column": 65,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 576,
            "column": 125,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 3` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 577,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 581,
            "column": 61,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 581,
            "column": 117,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 3` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 582,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 607, 1 is not aligned with `if` at 597, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 607,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 628,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 628,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 662,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 664,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 666,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 670,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 676,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 5` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 679,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 5` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 682,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 5` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 685,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `entity`. If it's necessary, use `_` or `_entity` as an argument name to indicate that it won't be used.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 689,
            "column": 52,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 689,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 693,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 693,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 695,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 700,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 700,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 701,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.process_search_msg.attribute('textContent').include? 'Search Completed'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 701,
            "column": 12,
            "length": 77
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 701,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 701,
            "column": 104,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `if`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 702,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 702,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.variable_search_msg.attribute('textContent').include? 'Search Completed'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 703,
            "column": 12,
            "length": 78
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 105,
            "length": 50
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 704, 2 is not aligned with `if` at 700, 1.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 704,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.variable_search_msg.attribute('textContent').include? 'Is the spelling correct?'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 709,
            "column": 12,
            "length": 86
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 709,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.variable_search_msg.attribute('textContent').include? 'Are you at the correct business level?'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 710,
            "column": 12,
            "length": 100
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.process_search_msg.attribute('textContent').include? 'Is the spelling correct?'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 712,
            "column": 12,
            "length": 85
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.process_search_msg.attribute('textContent').include? 'Are you at the correct business level?'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 713,
            "column": 12,
            "length": 99
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 800,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 801,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 804,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 805,
            "column": 120,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 806,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `button_type`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 809,
            "column": 74,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 2` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 925,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 2` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 929,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep 2` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 933,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 954,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 961,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 970,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 977,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 991,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1004,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1043,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1043,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@visible.include? 'ng-hide'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1044,
            "column": 11,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1047,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1061,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1063,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1071,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1085,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1089,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1092,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@box_shadow.include? \"#{BOX_SHADOW_COLOR}\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1096,
            "column": 10,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 1096,
            "column": 31,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1096,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1100,
            "column": 10,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1100,
            "column": 38,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1100,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `Range#cover?` instead of `Range#include?`.",
          "cop_name": "Performance/RangeInclude",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 22,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use `Range#cover?` instead of `Range#include?`.",
          "cop_name": "Performance/RangeInclude",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 58,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1131,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1159,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1164,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1166,
            "column": 9,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1166,
            "column": 46,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1166,
            "column": 93,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1166,
            "column": 135,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1166,
            "column": 185,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1186,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1192,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1198,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1214,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1224,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1225,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1227,
            "column": 56,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1232,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1233,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1239,
            "column": 6,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1257,
            "column": 12,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1257,
            "column": 57,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1260,
            "column": 12,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1260,
            "column": 57,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 1274,
            "column": 6,
            "length": 57
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1278,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1278,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1280,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1286, 4 is not aligned with `case` at 1277, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 1286,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@home.popup_template.attribute('data-options').include? 'animation:none'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1295,
            "column": 10,
            "length": 72
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1303,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1306,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1308,
            "column": 40,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1311,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1313,
            "column": 40,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1317,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1323,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 1328,
            "column": 6,
            "length": 81
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit_page.msg_id.attribute('textContent').include? INHERIT_ENF_ERR`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1345,
            "column": 10,
            "length": 67
          }
        },
        {
          "severity": "convention",
          "message": "Use `&&` instead of `and`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 60,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `&&` instead of `and`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 105,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `&&` instead of `and`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 152,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1368,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1372,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1375,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1381,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1387,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1393,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1399,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1405, 2 is not aligned with `case` at 1374, 1.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 1405,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1409,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1409,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1413,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1413,
            "column": 11,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1413,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1413,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1417,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1423,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1427,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 1439,
            "column": 63,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 1439,
            "column": 146,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@bh_over.include? \"#{BH_FILTER_OVER_COLOR}\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1441,
            "column": 12,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 1441,
            "column": 30,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1446,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1450,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1454,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1458,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1458,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1462,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1464,
            "column": 221,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 1465,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1466,
            "column": 189,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1471,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1476,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1481,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1492,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1497,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1501,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1509,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1510,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1512,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1517,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1521,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1533,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1544,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.msg_show.attribute('textContent').include? 'Unsaved changes will be lost'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1547,
            "column": 11,
            "length": 79
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1552,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1556,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1571,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1575,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@test_text.include? @simple_text`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1609,
            "column": 10,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1612,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1614,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit_page.assign_multiple_values.attribute('value').include? tokenizer_name`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1623,
            "column": 10,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1623,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1631,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1644,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1651,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1660,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1671,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1684,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1689,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1696,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1706,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1716,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1720,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1726,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1743,
            "column": 32,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `trun`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 1760,
            "column": 92,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 1764,
            "column": 6,
            "length": 80
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `error_msg.include? RESTRICTED_MSG`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1775,
            "column": 10,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1775,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1790,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1799,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `key_value`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1804,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.key_value.attribute('textContent').include? 'Key Value'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1805,
            "column": 10,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1805,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1815,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1816,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1823,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1827,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1830,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1844,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.commit_cancel_btns.attribute('innerHTML').include? '<br>'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1852,
            "column": 10,
            "length": 63
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1866,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1871,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1879,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1879,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1879,
            "column": 48,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1887,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1888,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1888,
            "column": 43,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1894,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1904,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1919,
            "column": 58,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1924,
            "column": 57,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1928,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Odd `else` layout detected. Did you mean to use `elsif`?",
          "cop_name": "Lint/ElseLayout",
          "corrected": null,
          "location": {
            "line": 1932,
            "column": 8,
            "length": 16
          }
        },
        {
          "severity": "warning",
          "message": "Operator `==` used in void context.",
          "cop_name": "Lint/Void",
          "corrected": null,
          "location": {
            "line": 1932,
            "column": 17,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1933,
            "column": 5,
            "length": 97
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1937,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1939,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1941,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@home.apiList.attribute('textContent').include? \"#{@api_name}\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1954,
            "column": 10,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 1954,
            "column": 58,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1969,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1971,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1972,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.execute_script(\"return $('.alert-msg').text();\").include? \"API '#{@api_name}' Name already exists\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1978,
            "column": 10,
            "length": 104
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 1979,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/process_builder_steps/process_builder_end_to_end_new.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `rescue` in its modifier form.",
          "cop_name": "Style/RescueModifier",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 16,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Operator `&&` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 42,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `&&`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 68,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 9,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 46,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `&&`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 79,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Operator `==` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 116,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 118,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/process_builder_steps/process_builder_regression_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 71,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 6,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 62,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 46,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 52,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 7,
            "length": 73
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 72,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 100,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 109,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 28,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 2,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 2,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 3,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 19,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 3,
            "length": 183
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 3,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `b1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 146,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 10,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 148,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 159,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `b1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 160,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 161,
            "column": 10,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 162,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 3,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 3,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 175, 0 is not aligned with `if` at 173, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 3,
            "length": 106
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 3,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 9,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 45,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 75,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 204,
            "column": 13,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 205,
            "column": 15,
            "length": 1682
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 207,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 19,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 211,
            "column": 21,
            "length": 252
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 211,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 216,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 216,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 171,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 232,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 235,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 237,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 9,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 45,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 240,
            "column": 75,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 245, 8 is not aligned with `ProcessBuilderObjects.new.action_box(action_detail[:name]).each do|n|` at 240, 10.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 245,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 246, 6 is not aligned with `if` at 238, 8.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 246,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 251,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 251,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 254, 4 is not aligned with `case` at 185, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 254,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 263,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 263,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 264,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 264,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 265,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 265,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 266,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 266,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 276,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 291,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 292,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 293,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 293,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 71,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 303,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 9,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 308,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 310,
            "column": 15,
            "length": 648
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 15,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 17,
            "length": 236
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 317,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 317,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 335,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 345,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 346,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 346,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 347,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 348,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 348,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 350,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 5) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 2,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 369, 1 is not aligned with `Then(/^Expand the Variable tree (.*?)-inner category$/) do |category|` at 363, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 372,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 380,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 382,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 166,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 173,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 386,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 388,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 388,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 388,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 388,
            "column": 174,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 174,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 390,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 392,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 392,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 392,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 392,
            "column": 174,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 174,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 169,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 395,
            "column": 8,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 395,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 396,
            "column": 13,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 401,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 402,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 402,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 405,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 407,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 408,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 408,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 412,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 414,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 415,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 415,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 416,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 417,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 417,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 423,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 424,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 424,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 425,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 425,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 425,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 425,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 426,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 427,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 427,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 428,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 428,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 428,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 428,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 429,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 430,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 430,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 432,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 433,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 433,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 440,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 441,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 441,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 443,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 444,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 444,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 445,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 445,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 445,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 445,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 447,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 447,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 448,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 448,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 448,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 448,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 460, 6 is not aligned with `case` at 453, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 460,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 464,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Use `Kernel#loop` with `break` rather than `begin/end/until`(or `while`).",
          "cop_name": "Lint/Loop",
          "corrected": null,
          "location": {
            "line": 485,
            "column": 6,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 487,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 492,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 496,
            "column": 2,
            "length": 53
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 500,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 501,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 507,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 512,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Use `Kernel#loop` with `break` rather than `begin/end/until`(or `while`).",
          "cop_name": "Lint/Loop",
          "corrected": null,
          "location": {
            "line": 513,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 515,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 515,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Tab detected.",
          "cop_name": "Style/Tab",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 2,
            "length": 79
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 518,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 518,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 519,
            "column": 2,
            "length": 57
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 520, 1 is not aligned with `Then(/^edit the Test Exception in error handling tab as (.*?) and ensure the same$/) do |name|` at 505, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 520,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 522,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 525,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 525,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 530,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 530,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 534,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 534,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 540,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 541,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 541,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 546,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 546,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 551,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 551,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 557,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 557,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 557,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 557,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 564,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 564,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 564,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 566,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 573,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 574,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 574,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 577,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 578,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 578,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 581,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 582,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 582,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 585,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 586,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 586,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 589,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 590,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 590,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 593,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 595,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 595,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 598,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 601,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 601,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 603,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 606,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 607,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 607,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 610,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 611,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 611,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 614,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 615,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 615,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 618,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 619,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 619,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 622,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 623,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 623,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 626,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 627,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 630,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 632,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 642,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 642,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 647,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 647,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 652,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 652,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 658,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 658,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 661,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 663,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 663,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 665,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 667,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 667,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 671,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 672,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 672,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 673,
            "column": 2,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 674,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 677,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 679,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 680,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 683,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 688,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Use `Kernel#loop` with `break` rather than `begin/end/until`(or `while`).",
          "cop_name": "Lint/Loop",
          "corrected": null,
          "location": {
            "line": 689,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 690,
            "column": 27,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 691,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 691,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 692,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 696,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 697,
            "column": 8,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 697,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 700,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 701,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 701,
            "column": 108,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 701,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 705,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 709,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 710,
            "column": 8,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 710,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 711,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 711,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 717,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 717,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 719,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 724,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 728,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 731,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 731,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 733,
            "column": 2,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 734,
            "column": 1,
            "length": 144
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 734,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 734,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 735,
            "column": 1,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 1,
            "length": 147
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 737,
            "column": 1,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 738,
            "column": 1,
            "length": 161
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 738,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 738,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 739,
            "column": 1,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 1,
            "length": 170
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 740,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 741,
            "column": 1,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 1,
            "length": 211
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 748,
            "column": 4,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 749,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 749,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 750,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 751,
            "column": 4,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 752,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 752,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 756,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 758,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 761,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 761,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 764,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 766,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 767,
            "column": 3,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 768,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 769,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 773,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 773,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 775,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 781,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 781,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 781,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 781,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 782,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 783,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not -1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 783,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 783,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 783,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 785,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 785,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 785,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 785,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 788,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 788,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 788,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 788,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 791,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 791,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 791,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 791,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 794,
            "column": 1,
            "length": 167
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 794,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 794,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 794,
            "column": 168,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 795,
            "column": 1,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 795,
            "column": 51,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 795,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 795,
            "column": 61,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 796,
            "column": 1,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 796,
            "column": 6,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 797,
            "column": 1,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 800,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 810,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 815,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 816,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 819,
            "column": 70,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 821,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 822,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 824,
            "column": 70,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 825,
            "column": 70,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 826,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 829,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 829,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 829,
            "column": 94,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 839,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 839,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 840,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 840,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 841,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 841,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 109,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 842,
            "column": 113,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 123,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 843,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 846,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 846,
            "column": 24,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 847,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 849,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 859,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 861,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 861,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 864,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 867,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 867,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 869,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 869,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 881,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 883,
            "column": 5,
            "length": 259
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 883,
            "column": 99,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 884,
            "column": 71,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 885, 0 is not aligned with `ProcessBuilderObjects.new.input_action_popup_view(popup_input_detail[:label_name]).each do |n|    ` at 883, 4.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 885,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 888,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 890,
            "column": 8,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 890,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 6) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 895,
            "column": 5,
            "length": 155
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 895,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 896,
            "column": 5,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 897,
            "column": 5,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 898,
            "column": 5,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 899,
            "column": 5,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 900,
            "column": 5,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 901,
            "column": 5,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 902,
            "column": 5,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 903,
            "column": 5,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 904,
            "column": 5,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 905,
            "column": 5,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 906,
            "column": 5,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 907,
            "column": 5,
            "length": 66
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 907,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 907,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 907,
            "column": 60,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 908,
            "column": 5,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 909,
            "column": 5,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 910,
            "column": 6,
            "length": 174
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 910,
            "column": 37,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 910,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 910,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 910,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 910,
            "column": 149,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 910,
            "column": 169,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 911,
            "column": 5,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 915,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 920,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 924,
            "column": 2,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 925,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 925,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 926,
            "column": 114,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 926,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 926,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 926,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 927, 1 is not aligned with `Then(/^ensure both the first child as well as the added alert are present in the tree$/) do` at 923, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 927,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 930,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 931,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 936,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 936,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 942,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 942,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 109,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 943,
            "column": 113,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 123,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 948,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 948,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 955,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 955,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 972,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 973,
            "column": 5,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 973,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 973,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 974,
            "column": 10,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 975,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 976,
            "column": 5,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 976,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 976,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 977,
            "column": 10,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 989,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 990,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 990,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 992,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 994,
            "column": 5,
            "length": 160
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 994,
            "column": 111,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 994,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 994,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 994,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 996, 1 is not aligned with `Then(/^verify the pre-populated values in test process popup for (.*?) level/) do |val|` at 988, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 996,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 998,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1001,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1002,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a variable.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1003,
            "column": 41,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1003,
            "column": 42,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1003,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1003,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1005,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1006,
            "column": 11,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a variable.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 40,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1007,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1013,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1015,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1016,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1016,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1020,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 213,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1031,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1031,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1032,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1032,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1036,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1036,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1037,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1037,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1038,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1038,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 1051,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1051,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1051,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1053,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1053,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1056,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space before keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 1057,
            "column": 53,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1057,
            "column": 55,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1059,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1072,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1072,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1078,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1079,
            "column": 27,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1081,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1081,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1086,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1086,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1087,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1087,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1092,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1092,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1094,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1094,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1099,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1106,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1107,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1112,
            "column": 53,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1112,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1112,
            "column": 63,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1114,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1114,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1116,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1123,
            "column": 53,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1123,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1123,
            "column": 63,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1125,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1126,
            "column": 4,
            "length": 150
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1126,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1126,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1128,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1133,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1134,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1134,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1136,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1137,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1137,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1139,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1140,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1140,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1142,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1142,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1144,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1144,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1148,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1149,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1149,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1154,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1156,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1157,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1157,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1161,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1163,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1163,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1169,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1169,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1174,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1174,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1177,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1180,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1180,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1181,
            "column": 53,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1181,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1183,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1183,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1188,
            "column": 76,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1188,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1188,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1188,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1192,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1195,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1196,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1196,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1199,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1200,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1200,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1208,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1209,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1209,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1211,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1212,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1212,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1217,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1220,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1220,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1222,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1223,
            "column": 52,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1225,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1228,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1228,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `when`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 1230,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1231,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1237,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1237,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1239,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1241,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1245,
            "column": 76,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1245,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1245,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1245,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1245,
            "column": 109,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1245,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1250,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1250,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 5,
            "length": 73
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1252,
            "column": 9,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 20,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 40,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 62,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1253,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1253,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1255,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1259,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1260,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1260,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1263,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1263,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1265,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1266,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1266,
            "column": 61,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1267,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1268,
            "column": 37,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 1269,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1270,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1273,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1273,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1273,
            "column": 88,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1278,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1279,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1279,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1279,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1279,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1279,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1280,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1281,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1281,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1281,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1281,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1281,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1283,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1287,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1290,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1290,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1293,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1296,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1296,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1298,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1298,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1305,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1305,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1307,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1307,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1313,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1313,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1315,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1315,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 1320,
            "column": 6,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1321,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1321,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1322,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1322,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1326,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1326,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1331,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1331,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1335,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1336,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1336,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1339,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1339,
            "column": 107,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1339,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1343,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1346,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1346,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1347,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1347,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1348,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1348,
            "column": 12,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 37,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1353,
            "column": 135,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1359,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1359,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1360,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1360,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1361,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1361,
            "column": 12,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1361,
            "column": 25,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1366,
            "column": 37,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1366,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1366,
            "column": 134,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1366,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1366,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 37,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1367,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1372,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1372,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1373,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1373,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1374,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1374,
            "column": 12,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1374,
            "column": 26,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 37,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1379,
            "column": 135,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 37,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1384,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1384,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1384,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1386,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1386,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1392,
            "column": 37,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1392,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1392,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1403,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1403,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1404,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1404,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1405,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1405,
            "column": 12,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1405,
            "column": 25,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1410,
            "column": 37,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1410,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1410,
            "column": 134,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1410,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1410,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1411,
            "column": 37,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1411,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1411,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1411,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1412,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1415,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1418,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1418,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1427,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1427,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1427,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1432,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1434,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1434,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1435,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1435,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1440,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1440,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1440,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1440,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1441,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1441,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1444,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1446,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1446,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1446,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1446,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1447,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1447,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1452,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1452,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1453,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1453,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1458,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1458,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1459,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1459,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1460,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1460,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1461,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1461,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1466,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1466,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1466,
            "column": 66,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1467,
            "column": 57,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1467,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1467,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1472,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1473,
            "column": 1,
            "length": 155
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1473,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1473,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1475,
            "column": 3,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1476,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1477,
            "column": 3,
            "length": 124
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1477,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1478,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1478,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1488,
            "column": 63,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1490,
            "column": 80,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1490,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1490,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1491,
            "column": 89,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1501,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1506,
            "column": 85,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1506,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1506,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1507,
            "column": 85,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1507,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1507,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1508,
            "column": 85,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1508,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1508,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1509,
            "column": 85,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1509,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1509,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1514,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1514,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1514,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1514,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1515,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1515,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1515,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1515,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1516,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1516,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1516,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1516,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1521,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1521,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1521,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1521,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1524,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1527,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1527,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1530,
            "column": 80,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1531,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1531,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1537,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1537,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1541,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1541,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1545,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1545,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1549,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1549,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1555,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1555,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1559,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1559,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1563,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1563,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1570,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1570,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1571,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1571,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1572,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1572,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1573,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1573,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1578,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1579,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1579,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1579,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1579,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1579,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1581,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1587,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1590,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1596,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1597,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1597,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1597,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1597,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1597,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1599,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1603,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1605,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1605,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1607,
            "column": 88,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1608,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1608,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 2,
            "length": 185
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 116,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1610,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1612,
            "column": 78,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1613,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1613,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1613,
            "column": 191,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1614,
            "column": 107,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1614,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1614,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1617,
            "column": 99,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1618,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1618,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1622,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 1622,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1623,
            "column": 106,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1623,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1623,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1628,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1628,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1629,
            "column": 4,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1633,
            "column": 84,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1633,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1633,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1634,
            "column": 84,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1634,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1634,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1638,
            "column": 84,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1638,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1638,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1640,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1642,
            "column": 84,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1642,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1642,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1643,
            "column": 84,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1643,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1643,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1646,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1648,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1648,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1648,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1652,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1652,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1652,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1659,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1659,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1659,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1668,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1668,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1668,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1673,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1674,
            "column": 88,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1675,
            "column": 86,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1675,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1675,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1678,
            "column": 98,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1679,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1679,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1680,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1680,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1680,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1683,
            "column": 42,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1684,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1684,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1684,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1688,
            "column": 77,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1689,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1689,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1689,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1692,
            "column": 66,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1693,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1693,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1694,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1695,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1695,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1696,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1698,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1700,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1700,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1701,
            "column": 84,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1701,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1701,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1702,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1704,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1706,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1708,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1708,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1708,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1708,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 1710, 0 is not aligned with `ACTION_CATEGORY.each { |category|` at 1706, 2.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 1710,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1712,
            "column": 81,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1712,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1712,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1713,
            "column": 47,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1715,
            "column": 76,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1715,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1715,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1715,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1715,
            "column": 109,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1715,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1718,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1719,
            "column": 45,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1720,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1720,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1723,
            "column": 60,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1724,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1724,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1728,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1729,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1729,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1730,
            "column": 3,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1730,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 1730,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1731,
            "column": 3,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1731,
            "column": 35,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `result`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1735,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1735,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1735,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1735,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1736,
            "column": 3,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1736,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1736,
            "column": 40,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1737,
            "column": 3,
            "length": 96
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1737,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1737,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1740,
            "column": 43,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1741,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1741,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1741,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1741,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1742,
            "column": 5,
            "length": 56
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1743,
            "column": 5,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1743,
            "column": 30,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1746,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1747,
            "column": 48,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1748,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1748,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1748,
            "column": 170,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1752,
            "column": 78,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1753,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1753,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1755,
            "column": 3,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1755,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 1755,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1757,
            "column": 3,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1757,
            "column": 35,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `result`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1761,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1761,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1761,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1761,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1762,
            "column": 3,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1762,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1762,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1763,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1764,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1765,
            "column": 3,
            "length": 96
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1765,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1765,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1768,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1774,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1775,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1776,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1776,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1776,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1779,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1779,
            "column": 51,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1780,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1780,
            "column": 59,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1781,
            "column": 35,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 1782,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1782,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1782,
            "column": 22,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1785, 4 is not aligned with `context_list.each do |each_item|    ` at 1781, 2.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 1785,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1788,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1789,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1790,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1790,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1790,
            "column": 172,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1793,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1794,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1795,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1795,
            "column": 59,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1796,
            "column": 35,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 1797,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1797,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1797,
            "column": 22,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1800, 4 is not aligned with `context_list.each do |each_item|    ` at 1796, 2.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 1800,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1801,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1804,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1805,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1805,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1805,
            "column": 177,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1809,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1809,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1809,
            "column": 44,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1810,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1811,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1811,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1811,
            "column": 173,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1812,
            "column": 62,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1814,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1814,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1818,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1818,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1818,
            "column": 44,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1820,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1820,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1820,
            "column": 172,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1821,
            "column": 61,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1823,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1823,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1826,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1827,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1827,
            "column": 9,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1830,
            "column": 70,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1832,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1832,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1833,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1833,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1834,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1838,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1839,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1839,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1840,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1840,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1841,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1841,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1842,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1845,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1847,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1847,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1848,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1848,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1849,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1849,
            "column": 40,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1850,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1850,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1854,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1855,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1855,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1856,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1856,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1857,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1857,
            "column": 40,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1859,
            "column": 8,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1859,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1860,
            "column": 8,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1860,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1861,
            "column": 8,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1861,
            "column": 36,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1862,
            "column": 8,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1862,
            "column": 46,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1863,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1866,
            "column": 34,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1867,
            "column": 8,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1867,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1868,
            "column": 8,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1868,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1869,
            "column": 8,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1869,
            "column": 39,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1870,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1870,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1874,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1874,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1874,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1878,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1878,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1878,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1882,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1882,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1882,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1883,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1883,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1887,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1887,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1887,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1888,
            "column": 3,
            "length": 163
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1888,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1888,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1897,
            "column": 8,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1900,
            "column": 74,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1901,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1901,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1901,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1902,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1902,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1903,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1903,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1907,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1907,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1908,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1908,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1909,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1909,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1912,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1921,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1921,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1921,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1921,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1927,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1927,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1927,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1927,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1938,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1938,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1941,
            "column": 39,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1945,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 6) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1947,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1949,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1949,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1949,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1949,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1952,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1953,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1954,
            "column": 78,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1959,
            "column": 38,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1964,
            "column": 38,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1965,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1965,
            "column": 31,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1967,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1968,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1972,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1972,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1975,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1976,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1977,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1978,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1978,
            "column": 10,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1979,
            "column": 10,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 4 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 1980,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 1980,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1981,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1982,
            "column": 3,
            "length": 166
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1982,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1982,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1983,
            "column": 3,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1984,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1985,
            "column": 3,
            "length": 164
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1985,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1985,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1986,
            "column": 3,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1987,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1988,
            "column": 3,
            "length": 136
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1988,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1988,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1988,
            "column": 139,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1990,
            "column": 3,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1990,
            "column": 8,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1992,
            "column": 3,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1993,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1994,
            "column": 3,
            "length": 162
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1994,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1995,
            "column": 3,
            "length": 72
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1996,
            "column": 3,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1996,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1996,
            "column": 24,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1997,
            "column": 3,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1997,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1998,
            "column": 3,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1999,
            "column": 3,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2000,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2001,
            "column": 3,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2001,
            "column": 44,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2002,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2006,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2006,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2006,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2006,
            "column": 185,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2006,
            "column": 186,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2006,
            "column": 206,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2008,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2008,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2012,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2012,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2012,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2012,
            "column": 169,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2012,
            "column": 170,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2012,
            "column": 190,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2012,
            "column": 201,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2013,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2013,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2016,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2017,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2018,
            "column": 8,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2019,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2019,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2020,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2021,
            "column": 8,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2022,
            "column": 8,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2023,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2024,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2025,
            "column": 8,
            "length": 58
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2026,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2029,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2029,
            "column": 45,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2031,
            "column": 16,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2032,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2032,
            "column": 27,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2033,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2035,
            "column": 115,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2037,
            "column": 13,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2038,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2039,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2039,
            "column": 10,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2040,
            "column": 5,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2040,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2042,
            "column": 93,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2042,
            "column": 104,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2044,
            "column": 13,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 2047, 4 is not aligned with `case` at 2031, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 2047,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2047,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2050,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2051,
            "column": 34,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2053,
            "column": 25,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2054,
            "column": 83,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2056,
            "column": 94,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2060,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2063,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2066,
            "column": 68,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2067,
            "column": 97,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2067,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2067,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2068,
            "column": 26,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2069,
            "column": 79,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2070,
            "column": 108,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2070,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2070,
            "column": 117,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2070,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2070,
            "column": 177,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2078,
            "column": 23,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2094,
            "column": 64,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2095,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2095,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2095,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2095,
            "column": 185,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2095,
            "column": 186,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2095,
            "column": 206,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2096,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2098,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2098,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2105,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2105,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2105,
            "column": 155,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2110,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2112,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2116,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2119,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2120,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2121,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2122,
            "column": 8,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2123,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2123,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2124,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2125,
            "column": 8,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2126,
            "column": 8,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2127,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2128,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2128,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2129,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2132,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2133,
            "column": 23,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2134,
            "column": 10,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2134,
            "column": 42,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2140,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2144,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2144,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2145,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2146,
            "column": 5,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2147,
            "column": 5,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2148,
            "column": 23,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2149,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2149,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2153,
            "column": 48,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2154,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Use `Kernel#loop` with `break` rather than `begin/end/until`(or `while`).",
          "cop_name": "Lint/Loop",
          "corrected": null,
          "location": {
            "line": 2155,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2157,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 2157,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2157,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2159,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 2159,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2159,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2162,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2165,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2166,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2166,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2169,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2171,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2172,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2173,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2174,
            "column": 8,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2175,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2175,
            "column": 50,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2176,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 2176,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2177,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2178,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 2178,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2179,
            "column": 8,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2180,
            "column": 8,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2181,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2181,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2182,
            "column": 8,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2183,
            "column": 88,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2184,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2193,
            "column": 53,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2197,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2204,
            "column": 58,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2206,
            "column": 46,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2215,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2215,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2220,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2221,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2222,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2223,
            "column": 8,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2224,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2225,
            "column": 8,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2229,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2229,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2230,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2231,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2232,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2233,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2234,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2237,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2239,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2239,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2240,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2240,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2244,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2244,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2244,
            "column": 31,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 2245,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2245,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2245,
            "column": 126,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2246,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2246,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 2246,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2246,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2251,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2258,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2265,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2267,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2267,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2267,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2269,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2269,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2275,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2275,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2276,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2276,
            "column": 109,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2276,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2276,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2276,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2281,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2287,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2289,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2296,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2305,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2305,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2310,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2310,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2310,
            "column": 166,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2316,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2316,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2325,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 2325,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2326,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2327,
            "column": 34,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `result`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2330,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2330,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2330,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2331,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2331,
            "column": 47,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2332,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2332,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2338,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2339,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2339,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2353,
            "column": 57,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2355,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2356,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2356,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2357,
            "column": 34,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2358,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2358,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2359,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2364,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 2370,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2371,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2372,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2372,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2372,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2372,
            "column": 162,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2373,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2373,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2374,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2374,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2374,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2374,
            "column": 166,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2375,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2375,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2376,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2376,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2376,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2376,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `ProcessBuilderObjects.new.Testprocess_Add_Metadata(i).click` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2377,
            "column": 7,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2379,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2379,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2379,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2379,
            "column": 162,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2380,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2380,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2381,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2381,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2381,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2381,
            "column": 166,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2382,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2382,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2383,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2383,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2383,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2383,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `ProcessBuilderObjects.new.Testprocess_Add_Metadata(i).click` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2384,
            "column": 7,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2386,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2389,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2394,
            "column": 10,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2397,
            "column": 10,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2412,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2415,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2417,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2418,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2425,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2432,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2433,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2434,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2434,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2438,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2439,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2440,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2440,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2444,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2445,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2446,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2447,
            "column": 3,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2447,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2448,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2451,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2451,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2454,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2454,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2457,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2457,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2461,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 2463,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2463,
            "column": 24,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2464,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2473,
            "column": 3,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2473,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2479,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2479,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2479,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2479,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2479,
            "column": 160,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2479,
            "column": 180,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2480,
            "column": 3,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2480,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2481,
            "column": 37,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2481,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2481,
            "column": 61,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2481,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2485,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2486,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2488,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2490,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2499,
            "column": 14,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2509,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2509,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2509,
            "column": 71,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2514,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2515,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2515,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2516,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2516,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2517,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2517,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2518,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2518,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2519,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2520,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2520,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2527,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2528,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2529,
            "column": 8,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2530,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2531,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2532,
            "column": 8,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2533,
            "column": 8,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2534,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2535,
            "column": 8,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2536,
            "column": 8,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2537,
            "column": 8,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2538,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2545,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2547,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2547,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2553,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2554,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2554,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2556,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2556,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2558,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2558,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2562,
            "column": 91,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2562,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2562,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2562,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2562,
            "column": 135,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2562,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2566,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2567,
            "column": 8,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2568,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2569,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2570,
            "column": 8,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2571,
            "column": 8,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2572,
            "column": 8,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2574,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2575,
            "column": 12,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2576,
            "column": 12,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2577,
            "column": 12,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2578,
            "column": 12,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2579,
            "column": 12,
            "length": 58
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2580,
            "column": 12,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2584,
            "column": 12,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2585,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2586,
            "column": 12,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2587,
            "column": 12,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2588,
            "column": 12,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2589,
            "column": 12,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2590,
            "column": 12,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 2592,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2594,
            "column": 8,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space before keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2597,
            "column": 89,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2599,
            "column": 8,
            "length": 72
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2608,
            "column": 8,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2609,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2610,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2612,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2613,
            "column": 12,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2614,
            "column": 12,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2615,
            "column": 12,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2616,
            "column": 12,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2617,
            "column": 12,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2618,
            "column": 12,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2619,
            "column": 12,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2620,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2622,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2622,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2622,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2622,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2624,
            "column": 88,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2624,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2624,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2624,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2624,
            "column": 123,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2624,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2626,
            "column": 54,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2627,
            "column": 82,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2627,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2627,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2628,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2630,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2630,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2632,
            "column": 88,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2632,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2632,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2632,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2632,
            "column": 123,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2632,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2634,
            "column": 54,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2635,
            "column": 80,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2635,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2635,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2635,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2635,
            "column": 113,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2635,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2643,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2648,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2650,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2651,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2651,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2652,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2654,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2654,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2661,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2663,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2664,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2665,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2666,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2670,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2673,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2673,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2673,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2676,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2676,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2679,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2679,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2682,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2682,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2684,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2684,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2685,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2685,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2686,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2686,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2687,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2687,
            "column": 109,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2687,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2687,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2687,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2688,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2691,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `href`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2692,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2697,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2697,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2701,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2702,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2704,
            "column": 8,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2705,
            "column": 8,
            "length": 39
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2706,
            "column": 8,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2711,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2711,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2711,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2711,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2711,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2711,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2716,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2717,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2717,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2718,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2719,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2719,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2723,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2725,
            "column": 8,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2726,
            "column": 8,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2727,
            "column": 8,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2728,
            "column": 8,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2733,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2733,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2733,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2733,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2733,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2733,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2736,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2737,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2738,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2739,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2740,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2740,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 2745,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2752,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2765,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2766,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2767,
            "column": 8,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2768,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2769,
            "column": 8,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2774,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2774,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2777,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2778,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2779,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2780,
            "column": 8,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2781,
            "column": 8,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2782,
            "column": 8,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2787,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2790,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2791,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2792,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2792,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2799,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2799,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 2800,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/process_builder_steps/process_builder_regression_steps_new.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `i`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.msg_box_id.attribute('textContent').include? msg`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 12,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.msg_show.attribute('textContent').include? msg`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 27,
            "column": 12,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `&&`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 58,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 124,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 137,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.action_friendly_name.attribute('innerHTML').include? @added_value`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 84,
            "column": 10,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.action_friendly_name.attribute('innerHTML').include? @added_value`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 10,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@edit.action_friendly_name.attribute('innerHTML').include? @added_value`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 114,
            "column": 10,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 148,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 159,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 161,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 162,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 165,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 71,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 182,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 187,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 90,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 173,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/process_builder_steps/process_builder_smoke_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 177,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 197,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 10,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 37,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 199,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 212,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 213,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 213,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 215,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 215,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 218,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 218,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 233,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 233,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 1,
            "length": 136
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 239,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 239,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 240,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 240,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 109,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 243,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 246,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `href`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 247,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 270,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 280,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 280,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 290,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 290,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 293,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 296,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 307,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 13,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 315,
            "column": 15,
            "length": 1032
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 320,
            "column": 17,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 327,
            "column": 17,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 346,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 348,
            "column": 7,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 54,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 363,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 376,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 378,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 386,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 388,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 391,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 13,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 395,
            "column": 15,
            "length": 228
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 395,
            "column": 15,
            "length": 228
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 395,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 400,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 400,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 405,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 405,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 413,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 418,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 418,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 425,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 426,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 437,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 437,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `puts 'Action can be saved successfully'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 447,
            "column": 5,
            "length": 39
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 455,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 455,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `puts 'Action can be saved successfully'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 456,
            "column": 5,
            "length": 39
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 462,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 462,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 462,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 462,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 462,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 462,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 465,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 467,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 468,
            "column": 71,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 489,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 489,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 492,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 71,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 504,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 505,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 511,
            "column": 9,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 512,
            "column": 11,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 512,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 523,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 524,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 528,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 532,
            "column": 10,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 539,
            "column": 47,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 540,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 546,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 548,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 549,
            "column": 71,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 558,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 559,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 563,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 572,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 573,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 578,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 580,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 581,
            "column": 71,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 590,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 591,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 595,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 598,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 598,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 605,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 606,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 616,
            "column": 8,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 616,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 616,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 620,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 630,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 630,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 630,
            "column": 60,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 633,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 633,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 634,
            "column": 10,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 635,
            "column": 10,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 637,
            "column": 36,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 637,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 637,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 637,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 637,
            "column": 148,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 637,
            "column": 168,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 640,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 642,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 646,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 646,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 646,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 647,
            "column": 3,
            "length": 81
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 647,
            "column": 63,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 647,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 647,
            "column": 73,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 648,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 649,
            "column": 3,
            "length": 112
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 649,
            "column": 85,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 649,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 650,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 650,
            "column": 3,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 650,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 651,
            "column": 3,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 651,
            "column": 8,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 652,
            "column": 3,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 652,
            "column": 8,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 3,
            "length": 188
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 653,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 653,
            "column": 160,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 180,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 654,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 654,
            "column": 3,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 654,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 655,
            "column": 3,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 655,
            "column": 8,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 656,
            "column": 3,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 656,
            "column": 8,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 657,
            "column": 3,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 657,
            "column": 3,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 657,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 661,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 661,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 664,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 665,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 665,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 665,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 665,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 665,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 665,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 667,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 667,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 671,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 672,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 673,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 674,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 675,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 675,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 675,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 675,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 675,
            "column": 155,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 675,
            "column": 175,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 676,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 682,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 682,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 685,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 685,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 688,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 688,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 689,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 689,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 690,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 690,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 691,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 694,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 696,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 24,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 697,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 703,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 185,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 703,
            "column": 186,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 206,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 704,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 707,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 712,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 714,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 722,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 724,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 727,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 729,
            "column": 13,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 730,
            "column": 15,
            "length": 928
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 730,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 731,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 731,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 184,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 188,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 742,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 747,
            "column": 59,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 748,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `export_types`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 761,
            "column": 3,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 761,
            "column": 18,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 762,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 762,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 768,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 770,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 770,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 770,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 770,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 771,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 771,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 778,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 778,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 781,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 781,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 783,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 789,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 789,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 789,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 789,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 789,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 789,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 792,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 796,
            "column": 9,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 808,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 810,
            "column": 7,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 824,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 824,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 825,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 825,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 833,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 843,
            "column": 54,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 844,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 857,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 860,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 860,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 870,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 875,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 875,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 876,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 876,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 877,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 877,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 879,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 879,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 880,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 880,
            "column": 162,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 886,
            "column": 49,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 887,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 1,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 897,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 900,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 900,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 900,
            "column": 199,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 905,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 905,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 906,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 906,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 907,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 911,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 912,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 913,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 914,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 926,
            "column": 5,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 926,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 926,
            "column": 48,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 927,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 928,
            "column": 7,
            "length": 67
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 929,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 930,
            "column": 7,
            "length": 209
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 930,
            "column": 157,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 930,
            "column": 162,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 931,
            "column": 7,
            "length": 82
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 940,
            "column": 48,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 949,
            "column": 36,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 950,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 969,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 969,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 970,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 970,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 971,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 971,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 972,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 975,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 976,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 978,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 978,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 978,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 983,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 994,
            "column": 50,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 997,
            "column": 36,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 997,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 997,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 997,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 997,
            "column": 148,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 997,
            "column": 168,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1000, 3 is not aligned with `if` at 980, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 1000,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1005,
            "column": 53,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1007,
            "column": 76,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1008,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1008,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1014,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1014,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1021,
            "column": 42,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1021,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1021,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1021,
            "column": 186,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1021,
            "column": 187,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1021,
            "column": 207,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1022,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1022,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1029,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1031,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1034,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1040,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1042,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1045,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1052,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1053,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1054,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1055,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1058,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1062,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1062,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1062,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1062,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1063,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1064,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1065,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1066,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1069,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1073,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1073,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1073,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1073,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1075,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1081,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1083,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1086,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1093,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1094,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1095,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1096,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 1098,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1099,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1105,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1106,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1107,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1108,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 1110,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1111,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1116,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1116,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1116,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1116,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1118,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1124,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1126,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1129,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1142,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1144,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1147,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1151,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1160,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1161,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1162,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1163,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1166,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1170,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1170,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1170,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1170,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1171,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1172,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1173,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1174,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1177,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1181,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1181,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1181,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1181,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1183,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1203,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1218,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1224,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1231,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1232,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1232,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1251,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1251,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1251,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1251,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1252,
            "column": 22,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1254,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1254,
            "column": 180,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1255,
            "column": 51,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1265,
            "column": 63,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1267,
            "column": 115,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1267,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1280,
            "column": 63,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1282,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1287,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1287,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1290,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1290,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1290,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1290,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1290,
            "column": 127,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1290,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1291,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1297,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1297,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1307,
            "column": 5,
            "length": 59
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 1307,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1307,
            "column": 57,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1308,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 1321,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1321,
            "column": 57,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1322,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1322,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1330,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1330,
            "column": 26,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 1334,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1335,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1335,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1335,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1336,
            "column": 9,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1351,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1352,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1352,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1352,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1352,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1355,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1356,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1356,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1356,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1356,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1357,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1358,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1358,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1358,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1358,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1359,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1360,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1360,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1360,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1360,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1365,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1371,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1372,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1372,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1372,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1372,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1373,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1374,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1374,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1374,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1374,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1375,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1376,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1376,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1376,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1376,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1377,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1378,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1378,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1378,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1378,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1380,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1393,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1404,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1408,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1410,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1412,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1414,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1429,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1429,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1429,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1439,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1439,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1439,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 1445,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1449,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1450,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1450,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1450,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1450,
            "column": 167,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1450,
            "column": 168,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1450,
            "column": 188,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1454,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1454,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1464,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1464,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1468,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1469,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1483,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1483,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1483,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1499,
            "column": 34,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1500,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1500,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1500,
            "column": 96,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1509,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1510,
            "column": 37,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1510,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1510,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1520,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1520,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1524,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1524,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1545,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1545,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1547,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1548,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1548,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1548,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1548,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1548,
            "column": 161,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1548,
            "column": 181,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1549,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1549,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1559,
            "column": 5,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1560,
            "column": 7,
            "length": 183
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1596,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1596,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1598,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1599,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1599,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1600,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1601,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1602,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1603,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1603,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1605,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1611,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1613,
            "column": 48,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1617,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1617,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1625,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1625,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1628,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1632,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1632,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1632,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1632,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1632,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1632,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1635,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 1637,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1638,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1647,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1649,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1651,
            "column": 11,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1654,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 1656,
            "column": 17,
            "length": 1532
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1656,
            "column": 17,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 1664,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 1671,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1672,
            "column": 1,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1689,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1691,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1693,
            "column": 11,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1696,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 1698,
            "column": 17,
            "length": 1536
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1698,
            "column": 17,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 1706,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 1713,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1714,
            "column": 1,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1731,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1733,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1735,
            "column": 11,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1738,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 1740,
            "column": 17,
            "length": 1536
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 1740,
            "column": 17,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 1748,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 1755,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1756,
            "column": 1,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 1774,
            "column": 54,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 1775,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1785,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1785,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1785,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1785,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1792,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1792,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1793,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1793,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1799,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1799,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1801,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1801,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1802,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1802,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1804,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1804,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1806,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1806,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1811,
            "column": 3,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1811,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1812,
            "column": 3,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1812,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1817,
            "column": 2,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1819,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1819,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1824,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1824,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1831,
            "column": 41,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 182,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1831,
            "column": 183,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1831,
            "column": 203,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1832,
            "column": 3,
            "length": 155
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1832,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1832,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1833,
            "column": 3,
            "length": 140
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1833,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1833,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1834,
            "column": 3,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1835,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1836,
            "column": 3,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1837,
            "column": 3,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1838,
            "column": 3,
            "length": 292
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1839,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1840,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1842,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `if`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 1844,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1845,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1845,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1850,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1852,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1852,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1853,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1853,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1859,
            "column": 3,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1862,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1866,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1866,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1872,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1872,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1894,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1908,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1908,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1914,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1915,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1917,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1917,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1934,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `action_detail`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1949,
            "column": 3,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1950,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1950,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1950,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1951,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1960,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1988,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1988,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1993,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1993,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1998,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1998,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2003,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2004,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2004,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2009,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2010,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2010,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2013,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Use `Kernel#loop` with `break` rather than `begin/end/until`(or `while`).",
          "cop_name": "Lint/Loop",
          "corrected": null,
          "location": {
            "line": 2014,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2016,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a literal.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 2016,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2019,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2021,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2023,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2023,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2023,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2023,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2023,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2023,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2024,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2027,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2029,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2037,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2038,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2039,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2041,
            "column": 11,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2044,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2046,
            "column": 17,
            "length": 1552
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2046,
            "column": 17,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2054,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2061,
            "column": 21,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2081,
            "column": 54,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2082,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 2087, 2 is not aligned with `Then(/^edit the process_1 and fill the action popup with (.*?) inputs$/) do |val|` at 2020, 0.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 2087,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2092,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2092,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2092,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2092,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2092,
            "column": 145,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2092,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `action_keys`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2095,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2096,
            "column": 5,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2097,
            "column": 5,
            "length": 172
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2097,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2103,
            "column": 5,
            "length": 44
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `popup_input_keys`. Did you mean `popup_inputs`?",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2104,
            "column": 5,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2104,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2105,
            "column": 5,
            "length": 52
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2106,
            "column": 7,
            "length": 1110
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 2107,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2110,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2110,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2112,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2112,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2116,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2116,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2122,
            "column": 5,
            "length": 110
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2122,
            "column": 54,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2123,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2132,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2133,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2133,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2157,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2159,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2160,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2161,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2162,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2163,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2163,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2166,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2169,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2169,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2174,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2174,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `name`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 2177,
            "column": 74,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2179,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2179,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2179,
            "column": 199,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2180,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2180,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2180,
            "column": 199,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2181,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2181,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2181,
            "column": 199,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2182,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2182,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2182,
            "column": 199,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2185,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2200,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2200,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2205,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2205,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2222,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2222,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2228,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2229,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2229,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2230,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2231,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2239,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2241,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2244,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2246,
            "column": 13,
            "length": 1464
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2246,
            "column": 13,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2254,
            "column": 17,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2261,
            "column": 17,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2271,
            "column": 11,
            "length": 514
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 2271,
            "column": 11,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2271,
            "column": 29,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep(2)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2273,
            "column": 13,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep(2)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2277,
            "column": 13,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2285,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2285,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2286,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2286,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2287,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2288,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2294,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2296,
            "column": 3,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2296,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 2297,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a variable.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 2297,
            "column": 8,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2297,
            "column": 9,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2300,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2302,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2314,
            "column": 50,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2314,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2314,
            "column": 62,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2318,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2318,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2326,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2326,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2329,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2329,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 2337,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2337,
            "column": 26,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 2337,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 2338,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 2338,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `name`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 2343,
            "column": 75,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2345,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2345,
            "column": 164,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2345,
            "column": 200,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2347,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2347,
            "column": 164,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2347,
            "column": 200,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2349,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2349,
            "column": 164,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2349,
            "column": 200,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2351,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2351,
            "column": 164,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2351,
            "column": 200,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2355,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2359,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2360,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2366,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2370,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2371,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2380,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2382,
            "column": 5,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2384,
            "column": 166,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2384,
            "column": 171,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2384,
            "column": 202,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2385,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2385,
            "column": 158,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2385,
            "column": 190,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2390,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2394,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2398,
            "column": 156,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2398,
            "column": 161,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2398,
            "column": 192,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2403,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2404,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2413,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2414,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2423,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `&&`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2424,
            "column": 82,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2424,
            "column": 120,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2424,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2424,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2428,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2429,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2429,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2433,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2433,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2437,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2437,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2438,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2439,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2439,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2446,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2449,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2449,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2452,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2456,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2457,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2458,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2459,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2459,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2463,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2465,
            "column": 9,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2468,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2470,
            "column": 15,
            "length": 1508
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2470,
            "column": 15,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2478,
            "column": 19,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2485,
            "column": 19,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 2495,
            "column": 13,
            "length": 121
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2506,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2507,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2515,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2515,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2518,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2518,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2520,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2520,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2522,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2522,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2524,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2524,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2526,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2526,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2528,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2528,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2529,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2530,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2539,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2540,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2541,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2541,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2543,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2543,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2547,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2547,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2551,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2553,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2553,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2555,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2555,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2559,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2559,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2570,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2572,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2573,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2573,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2574,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2576,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2576,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2580,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2582,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2583,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2594,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2595,
            "column": 66,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2595,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `modulename`. If it's necessary, use `_` or `_modulename` as an argument name to indicate that it won't be used.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 2595,
            "column": 76,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2597,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2601,
            "column": 29,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2602,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2602,
            "column": 27,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2603,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2606,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2607,
            "column": 29,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2609,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2612,
            "column": 67,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2613,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2615,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2617,
            "column": 5,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2620,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2622,
            "column": 9,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2626,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2626,
            "column": 170,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2626,
            "column": 202,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `name`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 2633,
            "column": 61,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2641,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2641,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2643,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2643,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2649,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2649,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2662,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2662,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2664,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2664,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2666,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2666,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2668,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2668,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2670,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2670,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2672,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2672,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2674,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2674,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2675,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2676,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2686,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2688,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2689,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2690,
            "column": 1,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2696,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2698,
            "column": 7,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2701,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2703,
            "column": 13,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2704,
            "column": 15,
            "length": 928
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 2704,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2705,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2705,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2710,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2710,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2710,
            "column": 184,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2710,
            "column": 188,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2716,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2716,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2717,
            "column": 10,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2721,
            "column": 59,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2722,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2731,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 2734,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2745,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2746,
            "column": 80,
            "length": 2
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2747,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2749,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2749,
            "column": 159,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2750,
            "column": 5,
            "length": 589
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 2750,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 6) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2751,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2752,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2753,
            "column": 13,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2753,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2753,
            "column": 157,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 2754,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2755,
            "column": 13,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2755,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2755,
            "column": 157,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 2756, 8 is not aligned with `case` at 2751, 10.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 2756,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 2758,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2761,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2762,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2766,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2767,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2768,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2769,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2769,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2773,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2775,
            "column": 9,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2778,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2780,
            "column": 15,
            "length": 1508
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2780,
            "column": 15,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2788,
            "column": 19,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Move `driver.action.drag_and_drop(source, dest).perform` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 2795,
            "column": 19,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2805,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 2806,
            "column": 13,
            "length": 309
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2806,
            "column": 13,
            "length": 309
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2806,
            "column": 31,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2811,
            "column": 13,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space after keyword `do` is missing.",
          "cop_name": "Style/SpaceAroundKeyword",
          "corrected": false,
          "location": {
            "line": 2819,
            "column": 52,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 2820,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2827,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2827,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2830,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2830,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 2834,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2836,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2838,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2839,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2839,
            "column": 6,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2839,
            "column": 42,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2840,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2843,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 6) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2844,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2845,
            "column": 9,
            "length": 28
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 2857, 2 is not aligned with `popup_exception_keys.each { |popup_exception_key|` at 2843, 6.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 2857,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2864,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2866,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2867,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2867,
            "column": 3,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2867,
            "column": 39,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2871,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2874,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2874,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2874,
            "column": 154,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2880,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2885,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2885,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2886,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2886,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2887,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2887,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2888,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2888,
            "column": 161,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2900,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2902,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2903,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2903,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2904,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2907,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2910,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2910,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2910,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 2914, 2 is not aligned with `if` at 2903, 4.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 2914,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2920,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2922,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2923,
            "column": 5,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2923,
            "column": 41,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2927,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2932,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2932,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2933,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2933,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2934,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2934,
            "column": 150,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2935,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2935,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2936,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2936,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2937,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2937,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2938,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2938,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 2949,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2951,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2952,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2952,
            "column": 7,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2952,
            "column": 43,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2953,
            "column": 7,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 2956,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 2958,
            "column": 9,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2959,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 2962,
            "column": 10,
            "length": 53
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 2965, 4 is not aligned with `if` at 2952, 6.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 2965,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2970,
            "column": 8,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2970,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2970,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2974,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 2986,
            "column": 50,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2986,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 2986,
            "column": 60,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2994,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2994,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 2994,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2994,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2994,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3000,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3001,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3001,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 3007,
            "column": 2,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 3007,
            "column": 2,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3007,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 3008,
            "column": 2,
            "length": 99
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 3008,
            "column": 87,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 3018,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `driver`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 3035,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 3037,
            "column": 1,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3038,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 3043,
            "column": 1,
            "length": 167
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3043,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 3047,
            "column": 1,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3050,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 3050,
            "column": 53,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3054,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 3054,
            "column": 55,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 3056,
            "column": 1,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3057,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3059,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3059,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3059,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 3077,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3079,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3079,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3084,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3084,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3099,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3099,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 144,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 157,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 188,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3101,
            "column": 189,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3107,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3109,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 3112,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3119,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3120,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3121,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 3122,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3125,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3129,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3129,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3129,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3129,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3130,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3131,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3132,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 3133,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3136,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3140,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3140,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3140,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3140,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 3142,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3149,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3151,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 3154,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3159,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3159,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3159,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3165,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3166,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3167,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3167,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3167,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3167,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3168,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3168,
            "column": 18,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3169,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3169,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3169,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3169,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3170,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3171,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3171,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3171,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3171,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3172,
            "column": 4,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3176,
            "column": 34,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3178,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3179,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3179,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3179,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3179,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3179,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3182,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3182,
            "column": 19,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3183,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3183,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3183,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3183,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3183,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 3186,
            "column": 4,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3187,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3187,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3187,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3187,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3187,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3190,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3191,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 3193,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3196,
            "column": 145,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3196,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 3199,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 3202,
            "column": 37,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3202,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3202,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3202,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3202,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 3203,
            "column": 37,
            "length": 97
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3203,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3203,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3203,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3203,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 3204,
            "column": 37,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3204,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3204,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3204,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3204,
            "column": 138,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 3207,
            "column": 6,
            "length": 87
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3209,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3209,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3210,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3210,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3211,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3211,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3212,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3212,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3217,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3217,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3217,
            "column": 179,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3218,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3218,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3218,
            "column": 166,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3219,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3219,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3219,
            "column": 168,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3234,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3235,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 3235,
            "column": 12,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3237,
            "column": 31,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3238,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3240,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `result`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 3242,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3242,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3242,
            "column": 15,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3243,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3244,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3244,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 3244,
            "column": 111,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 3248,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Annotation keywords like `TODO` should be all upper case, followed by a colon, and a space, then a note describing the problem.",
          "cop_name": "Style/CommentAnnotation",
          "corrected": false,
          "location": {
            "line": 3249,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `elem`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 3255,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3255,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3258,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3264,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3272,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3277,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3281,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3294,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3295,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3295,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "1 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 3297,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/role_management_steps/role_management_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 91,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Move `step 'Click on Apply button for '+val+' Level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 107,
            "column": 7,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `step 'Click on Apply button for '+val+' Level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 112,
            "column": 7,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@apipage.apigroup($api_name).displayed?).to be_truthy, 'Created API is not displayed in API list page under '+bh_level+' level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 152,
            "column": 7,
            "length": 134
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 152,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@apipage.apigroup($api_name).displayed?).to be_truthy, 'Created API is not displayed in API list page under '+bh_level+' level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 156,
            "column": 7,
            "length": 134
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 156,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 161,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@actionpage.action_list_item($action_name).displayed?).to be_truthy, 'Created Action is not displayed in Action list page under '+bh_level+' level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 181,
            "column": 7,
            "length": 154
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 181,
            "column": 43,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@actionpage.action_list_item($action_name).displayed?).to be_truthy, 'Created Action is not displayed in Action list page under '+bh_level+' level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 185,
            "column": 7,
            "length": 154
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 185,
            "column": 43,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 152,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@variablepage.variable_list_item(@variable_name).displayed?).to be_truthy, 'Created Variable is not displayed in Variable list page under '+bh_level+' level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 205,
            "column": 7,
            "length": 164
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 162,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 207,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 207,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `expect(@variablepage.variable_list_item(@variable_name).displayed?).to be_truthy, 'Created Variable is not displayed in Variable list page under '+bh_level+' level'` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 209,
            "column": 7,
            "length": 164
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 162,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 216,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 218,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 227,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 235,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 255,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 258,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 260,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 262,
            "column": 17,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 271,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 276,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 283,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 289,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 302,
            "column": 5,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 303,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 311,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 328,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 340,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 346,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 350,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 352,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 354,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 361,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 367,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 373,
            "column": 43,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 374,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 375,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 384,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 388,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 390,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 392,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 399,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 400,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 405,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 406,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 407,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 412,
            "column": 43,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 413,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 414,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 423,
            "column": 5,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 424,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 438,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 439,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 440,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 443,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 445,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 447,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 448,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 448,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 460,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 460,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 471,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 472,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 472,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 498,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 507,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 508,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 511,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 523,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 534,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 535,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 535,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 538,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 540,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 547,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 548,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 550,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 559,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 568,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 576,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 578,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 579,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 602,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 603,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@manageaccess_popup.owner_checkbox(NEW_SEARCH_TEXT_USER).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 607,
            "column": 10,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 610,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 612,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 613,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@manageaccess_popup.owner_checkbox(NEW_SEARCH_TEXT_USER).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 632,
            "column": 10,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 636,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 637,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 643,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 646,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 646,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 652,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 653,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 654,
            "column": 49,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 655,
            "column": 28,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 658,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 658,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 663,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 665,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@manageaccess_popup.owner_checkbox(NEW_SEARCH_TEXT_USER).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 683,
            "column": 10,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 688,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 688,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 693,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 696,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 697,
            "column": 38,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 697,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 697,
            "column": 127,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 697,
            "column": 147,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 698,
            "column": 2,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 699,
            "column": 75,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 699,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 699,
            "column": 107,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 699,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 700,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 702,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 703,
            "column": 75,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 703,
            "column": 110,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 703,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 704,
            "column": 41,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 706,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 707,
            "column": 41,
            "length": 91
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 709,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 709,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 711,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 716,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 717,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 718,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 720,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@ma_popup.user_view_checkbox(NEW_SEARCH_TEXT_USER).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 739,
            "column": 14,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@ma_popup.role_view_checkbox(NEW_SEARCH_TEXT_ROLE).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 755,
            "column": 14,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 756,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@manageaccess_popup.owner_checkbox(NEW_SEARCH_TEXT_USER).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 770,
            "column": 14,
            "length": 76
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 777,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 778,
            "column": 21,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 783,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 784,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@apipage.user_view_checkbox(NEW_SEARCH_TEXT_USER).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 806,
            "column": 10,
            "length": 69
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@apipage.role_view_checkbox(NEW_SEARCH_TEXT_ROLE).attribute 'checked'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 822,
            "column": 10,
            "length": 69
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 825,
            "column": 6,
            "length": 105
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 826,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 827,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 828,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 830,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 834,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 837,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 845,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 846,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 850,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 853,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 858,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 859,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 863,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 865,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 873,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 875,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 881,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 883,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 895,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 896,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 897,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 900,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 914,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 916,
            "column": 25,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 919,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 937,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 945,
            "column": 5,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 946,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 962,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 969,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 970,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 971,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 974,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 976,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 977,
            "column": 32,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 980,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 980,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 981,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 985,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 987,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 987,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 989,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1002,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1004,
            "column": 32,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1008,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1018,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1020,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1020,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1029,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1035,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 1041,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1041,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1046,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1047,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1049,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1058,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1065,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1078,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 1083,
            "column": 9,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1083,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1085,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@variablepage.txt_api_sample.attribute 'value'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1094,
            "column": 14,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `@variablepage.txt_api_description.attribute 'value'`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1095,
            "column": 14,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1097,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1102,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1103,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1104,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1107,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1122,
            "column": 53,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1124,
            "column": 32,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1127,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 1145,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1151,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1152,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1153,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1155,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1162,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1163,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1170,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1171,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1178,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1183,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1185,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1188,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1189,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1192,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1193,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1196,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1201,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1202,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1203,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1205,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1211,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1211,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1211,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1217,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1229,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1231,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1233,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1233,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 1250,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1259,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1265,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1277,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1278,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1300,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1301,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1318,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1319,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1320,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1323,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1341,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1342,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1343,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1346,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1354,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1369,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `execute_script \"return document.getElementById('headerBar').clientWidth==document.getElementById('formContainer').clientWidth\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1375,
            "column": 10,
            "length": 126
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1386,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1387,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 1388,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1391,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1399,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Add parentheses to nested method call `execute_script \"return document.getElementById('headerBar').clientWidth>document.getElementById('formContainer').clientWidth\"`.",
          "cop_name": "Style/NestedParenthesizedCalls",
          "corrected": null,
          "location": {
            "line": 1406,
            "column": 10,
            "length": 125
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1411,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1416,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1423,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1428,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1437,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1443,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1451,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1452,
            "column": 28,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1455,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1457,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `entity`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 1461,
            "column": 52,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1474,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1476,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1478,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1480,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1482,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1484,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 1486,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1491,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1492,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1493,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1494,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `entity`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 1508,
            "column": 51,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1509,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1520,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unused block argument - `entity`. You can omit the argument if you don't care about it.",
          "cop_name": "Lint/UnusedBlockArgument",
          "corrected": false,
          "location": {
            "line": 1524,
            "column": 46,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1525,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1533,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 1535,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1535,
            "column": 17,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1536,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1544,
            "column": 2,
            "length": 68
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `value`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 1548,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1548,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1549,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1551,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 1558,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/variable_builder_steps/variable_builder_end_to_end.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 84,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/variable_builder_steps/variable_builder_regression_steps.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `searchresults`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 5,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 164,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 172,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 169,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 180,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 170,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 181,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 98,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 114,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 133,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `s1`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 81,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 41,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 67,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 41,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 64,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `variable_details`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 117,
            "column": 5,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 3,
            "length": 902
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 3,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 8,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 8,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 230,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 237,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 237,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 237,
            "column": 133,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 237,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 8,
            "length": 43
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 8,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 243,
            "column": 8,
            "length": 42
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 244,
            "column": 8,
            "length": 69
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 245,
            "column": 8,
            "length": 37
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 248,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 8,
            "length": 38
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 252,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 252,
            "column": 7,
            "length": 35
          }
        },
        {
          "severity": "convention",
          "message": "Use `%r` around regular expression.",
          "cop_name": "Style/RegexpLiteral",
          "corrected": false,
          "location": {
            "line": 258,
            "column": 6,
            "length": 84
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 266,
            "column": 8,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 8,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 272,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 277,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 277,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 282,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 303,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 328,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 329,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 332,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 333,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 335,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 337,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 338,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 343,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "features/step_definitions/variable_builder_steps/variable_builder_smoke_steps.rb",
      "offenses": [
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 7,
            "length": 1214
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 11,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 11,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 11,
            "length": 72
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 11,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 11,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 11,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 11,
            "length": 160
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 11,
            "length": 164
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 11,
            "length": 65
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 11,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 11,
            "length": 162
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 11,
            "length": 49
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body beginning.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 86,
            "column": 156,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 176,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 2,
            "length": 39
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 135,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 194,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 163,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 168,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 156, 10 is not aligned with `if` at 135, 8.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 11,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 182,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 199,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 199,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 199,
            "column": 194,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 140,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 215,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 228,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 233,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 194,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 255,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 269,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 276,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 276,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 282,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 287,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 304,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 304,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 304,
            "column": 194,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 317,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 317,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 320,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 320,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 320,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 320,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 320,
            "column": 131,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 320,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 325,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 332,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 332,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 333,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 333,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 344,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 344,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 354,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 381,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 387,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 387,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 401,
            "column": 136,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 401,
            "column": 141,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 405,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 408,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 414,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 417,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 417,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 422,
            "column": 34,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 422,
            "column": 131,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 151,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 425,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 427,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 427,
            "column": 112,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 432,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 437,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 437,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 443,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 443,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 451,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 50,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 460,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 460,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at block body end.",
          "cop_name": "Style/EmptyLinesAroundBlockBody",
          "corrected": false,
          "location": {
            "line": 461,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 464,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 467,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 467,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 103,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 480,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 483,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 484,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 485,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 486,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 486,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 488,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 488,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 489,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 491,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 491,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 504,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 504,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 505,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 505,
            "column": 135,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 120,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 507,
            "column": 155,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 507,
            "column": 160,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 508,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 508,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 129,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 514,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 13,
            "length": 236
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 517,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 10) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 518,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 521, 2 is not aligned with `input_details.each { |input_val|` at 517, 12.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 521,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 522, 0 is not aligned with `api_source_keys.each {|api_source_key|` at 514, 2.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 522,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 522,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 523,
            "column": 4,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 526,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 527,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 528,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`}` at 530, 0 is not aligned with `api_source_keys.each {|api_source_key|` at 527, 4.",
          "cop_name": "Lint/BlockAlignment",
          "corrected": false,
          "location": {
            "line": 530,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 4,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 5,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "features/support/env.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 1,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 1,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 1,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 17,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 17,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Separate every 3 digits in the integer portion of a number with underscores(_).",
          "cop_name": "Style/NumericLiterals",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 11,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Freeze mutable objects assigned to constants.",
          "cop_name": "Style/MutableConstant",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 13,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 13,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 40,
            "column": 1,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 20,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 52,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 18,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `?`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `outline_example`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 3,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 21,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 35,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 3,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 3,
            "length": 77
          }
        },
        {
          "severity": "convention",
          "message": "Do not leave space between `!` and its argument.",
          "cop_name": "Style/SpaceAfterNot",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for open_new_selenium_session is too high. [39.1/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for open_new_selenium_session is too high. [11/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [56/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 1,
            "length": 3051
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for open_new_selenium_session is too high. [13/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 77,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 23 instead of 3).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 24,
            "length": 127
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 4,
            "length": 2423
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not -2) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 3,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 60,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 88,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 48,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 48,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 56,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 48,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 41,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 58,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 82,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 104,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 58,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 82,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 104,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 8,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 64,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 93,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 8,
            "length": 483
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 53,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 53,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 61,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 53,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 62,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 86,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 6,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 8,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 8,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 8,
            "length": 113
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 8,
            "length": 427
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 53,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 53,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 61,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 53,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 134,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 136,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 138,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 20,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 52,
            "length": 40
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 18,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `?`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `outline_example`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 171,
            "column": 3,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 21,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 35,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `tr` instead of `gsub`.",
          "cop_name": "Performance/StringReplacement",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 36,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 182,
            "column": 54,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `to_s` over string interpolation.",
          "cop_name": "Style/UnneededInterpolation",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 13,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 28,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 40,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 3,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 3,
            "length": 66
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 7,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 1,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 195,
            "column": 1,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 195,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 196,
            "column": 1,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/assertion_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `!=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 14,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/db_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 4,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use CamelCase for classes and modules.",
          "cop_name": "Style/ClassAndModuleCamelCase",
          "corrected": null,
          "location": {
            "line": 4,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [16/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 3,
            "length": 508
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 19,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 22,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 153,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 165,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 4 instead of 6).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 5,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 6 instead of 4).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 7,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 36,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 7,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 5,
            "length": 111
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 5,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 5,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 4 instead of 6).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 5,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 6 instead of 4).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 7,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 371,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 383,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 53,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use `do` with multi-line `while`.",
          "cop_name": "Style/WhileUntilDo",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 25,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 7,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 367,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 379,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Assignment in condition - you probably meant to use `==`.",
          "cop_name": "Lint/AssignmentInCondition",
          "corrected": null,
          "location": {
            "line": 66,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use `do` with multi-line `while`.",
          "cop_name": "Style/WhileUntilDo",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 25,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 7,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/display_helper.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use CamelCase for classes and modules.",
          "cop_name": "Style/ClassAndModuleCamelCase",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 7,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Rename `is_element_present` to `element_present?`.",
          "cop_name": "Style/PredicateName",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 7,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Use `!empty?` instead of `size > 0`.",
          "cop_name": "Style/ZeroLengthPredicate",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 14,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [13/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 1,
            "length": 266
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 1,
            "length": 266
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 10,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unreachable code detected.",
          "cop_name": "Lint/UnreachableCode",
          "corrected": null,
          "location": {
            "line": 32,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 10,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 10,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Do not suppress exceptions.",
          "cop_name": "Lint/HandleExceptions",
          "corrected": null,
          "location": {
            "line": 38,
            "column": 5,
            "length": 16
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 38,
            "column": 5,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [14/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 3,
            "length": 312
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 50,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 22,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `>=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 10,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`(...)` interpreted as grouped expression.",
          "cop_name": "Lint/ParenthesesAsGroupedExpression",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Unreachable code detected.",
          "cop_name": "Lint/UnreachableCode",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 10,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 5,
            "length": 53
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 9,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 32,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 8,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "Avoid rescuing the `Exception` class. Perhaps you meant to rescue `StandardError`?",
          "cop_name": "Lint/RescueException",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 5,
            "length": 33
          }
        },
        {
          "severity": "warning",
          "message": "Useless assignment to variable - `e`.",
          "cop_name": "Lint/UselessAssignment",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 3,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/object_constructors.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level module documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 12,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 13,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 15,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 13,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 14,
            "column": 11,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 11,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 15,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 16,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 16,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 30,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 33,
            "column": 14,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 37,
            "column": 16,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 41,
            "column": 19,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 13,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 23,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body end.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/object_methods.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level module documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 8,
            "column": 26,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 42,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use `!empty?` instead of `length > 0`.",
          "cop_name": "Style/ZeroLengthPredicate",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 18,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 42,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use `empty?` instead of `length == 0`.",
          "cop_name": "Style/ZeroLengthPredicate",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 18,
            "length": 72
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [11/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 577
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 23,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 42,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use `!empty?` instead of `length > 0`.",
          "cop_name": "Style/ZeroLengthPredicate",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 20,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use `empty?` instead of `length == 0`.",
          "cop_name": "Style/ZeroLengthPredicate",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 20,
            "length": 72
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 37,
            "column": 48,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 42,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 63,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 7,
            "length": 123
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 49,
            "column": 7,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 83,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 84,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body end.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/random_generator.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Separate every 3 digits in the integer portion of a number with underscores(_).",
          "cop_name": "Style/NumericLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 32,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/objects_helper/read_event_json.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [160/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 1,
            "length": 10326
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 185,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 185,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 254,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 26,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 36,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 18,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 69,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 17,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 42,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 54,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for number_of_actions is too high. [38.28/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [30/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 23,
            "column": 3,
            "length": 1077
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 69,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 27,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 41,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 52,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 12,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 7,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 35,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 35,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 25,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 9,
            "length": 31
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 39,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 38,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 40,
            "column": 11,
            "length": 230
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 14,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 26,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 29,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Move `puts action_obj[\"FamilyGuid\"]` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 42,
            "column": 13,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 29,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Move `puts action_obj[\"FamilyGuid\"]` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 13,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 29,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 11,
            "length": 106
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 11,
            "length": 106
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 14,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around an unary operation.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 14,
            "length": 47
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 16,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 28,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 13,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 12,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 1,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for remove_admin is too high. [37.5/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 58,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [13/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 58,
            "column": 3,
            "length": 1120
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 69,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 247,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 32,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 51,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 52,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 230,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 57,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 235,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 1,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for grant_admin is too high. [39.67/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [19/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 75,
            "column": 3,
            "length": 1305
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 69,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 247,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 78,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 34,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 53,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 54,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 232,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 59,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 237,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 89,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 1,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix reader method names with `get_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 69,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 247,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 26,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 1,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for get_user_roles is too high. [16.16/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 105,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix reader method names with `get_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 105,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 57,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 235,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `delete` instead of `gsub`.",
          "cop_name": "Performance/StringReplacement",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 16,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `delete` instead of `gsub`.",
          "cop_name": "Performance/StringReplacement",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 16,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `delete` instead of `gsub`.",
          "cop_name": "Performance/StringReplacement",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 16,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 23,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 1,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 1,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 1,
            "length": 54
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for grant_entity_access is too high. [73.31/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 120,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [26/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 120,
            "column": 3,
            "length": 2512
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 177,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 189,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 50,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 130,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 228,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep(10)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 125,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Convert `if` nested inside `else` to `elsif`.",
          "cop_name": "Style/IfInsideElse",
          "corrected": null,
          "location": {
            "line": 127,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 42,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 220,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 42,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 220,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 68,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 148,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 246,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep(10)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 140,
            "column": 9,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 205,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 212,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 263,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 275,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 52,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 230,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `sleep(10)` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 144,
            "column": 9,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 1,
            "length": 38
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for remove_qeAutomation is too high. [37.5/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 150,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [13/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 150,
            "column": 3,
            "length": 1143
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 150,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 69,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 247,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 32,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 51,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 52,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 126,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 230,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 57,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 137,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 235,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 159,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Incorrect indentation detected (column 0 instead of 2).",
          "cop_name": "Style/CommentIndentation",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 1,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for grant_qeAutomation is too high. [39.67/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 167,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [19/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 167,
            "column": 3,
            "length": 1336
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 167,
            "column": 7,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 69,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 105,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 143,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 149,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 247,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 170,
            "column": 5,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 34,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 53,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 54,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 128,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 232,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 59,
            "length": 179
          }
        },
        {
          "severity": "convention",
          "message": "Space inside { missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 109,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 139,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside } missing.",
          "cop_name": "Style/SpaceInsideHashLiteralBraces",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 237,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use a guard clause instead of wrapping the code inside a conditional expression.",
          "cop_name": "Style/GuardClause",
          "corrected": null,
          "location": {
            "line": 181,
            "column": 7,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/page_objects/colorcode.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [118/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 1,
            "length": 4323
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 5,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant curly braces around a hash parameter.",
          "cop_name": "Style/BracesAroundHashParameters",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 185,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 195,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 231,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 26,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 36,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 18,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 14,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for executed_actions is too high. [32.88/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for executed_actions is too high. [10/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [29/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 3,
            "length": 1282
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for executed_actions is too high. [11/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use hash literal `{}` instead of `Hash.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 22,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 20,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 21,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 11,
            "length": 939
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 11,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 13,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 64,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Put a space before an end-of-line comment.",
          "cop_name": "Style/SpaceBeforeComment",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 64,
            "length": 51
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `j=j+1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `j=j+1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 33,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `j=j+1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 37,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for non_executed_actions is too high. [43.29/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for non_executed_actions is too high. [13/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [36/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 3,
            "length": 1417
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for non_executed_actions is too high. [16/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 48,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use hash literal `{}` instead of `Hash.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 24,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 52,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 53,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 54,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 55,
            "column": 11,
            "length": 1004
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 11,
            "length": 1004
          }
        },
        {
          "severity": "convention",
          "message": "Use `next` to skip iteration.",
          "cop_name": "Style/Next",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 11,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a method call.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 15,
            "length": 44
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 15,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 17,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Move `k=k+1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 63,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 17,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Move `k=k+1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 66,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 17,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 15,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 15,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for modules_and_actions is too high. [53.99/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for modules_and_actions is too high. [8/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [40/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 3,
            "length": 1200
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for modules_and_actions is too high. [10/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 87,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 5,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 5,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parallel assignment.",
          "cop_name": "Style/ParallelAssignment",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 5,
            "length": 45
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use hash literal `{}` instead of `Hash.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 33,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use hash literal `{}` instead of `Hash.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 42,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 91,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 8,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 95,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `i+=1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 101,
            "column": 11,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `i+=1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 107,
            "column": 11,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 12,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer `each` over `for`.",
          "cop_name": "Style/For",
          "corrected": null,
          "location": {
            "line": 109,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Avoid more than 3 levels of block nesting.",
          "cop_name": "Metrics/BlockNesting",
          "corrected": null,
          "location": {
            "line": 110,
            "column": 11,
            "length": 319
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `||`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 46,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `c+=1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 112,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 14,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `==`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 43,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `c+=1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 115,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 14,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Move `c+=1` out of the conditional.",
          "cop_name": "Style/IdenticalConditionalBranches",
          "corrected": null,
          "location": {
            "line": 118,
            "column": 13,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 14,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 16,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `-`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 13,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "12 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 1,
            "length": 12
          }
        }
      ]
    },
    {
      "path": "lib/common/page_objects/compound_element.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 6,
            "column": 22,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 11,
            "column": 23,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 16,
            "column": 39,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 65,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body end.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/page_objects/div.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/page_objects/extjs_panel.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Class has too many lines. [168/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 3,
            "length": 11187
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 7,
            "length": 80
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 7,
            "length": 108
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 15,
            "column": 20,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 65,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 26,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 9,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 24,
            "column": 20,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 29,
            "column": 22,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 65,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 26,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for selectComboValueInElement is too high. [31.08/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [41/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 5,
            "length": 2726
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 45,
            "column": 9,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 45,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 49,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 61,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 52,
            "column": 7,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Block body expression is on the same line as the block start.",
          "cop_name": "Style/MultilineBlockLayout",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 20,
            "length": 139
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 53,
            "column": 21,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 53,
            "column": 34,
            "length": 106
          }
        },
        {
          "severity": "convention",
          "message": "Indent the first parameter one step more than the start of the previous line.",
          "cop_name": "Style/FirstParameterIndentation",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 11,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indenting an expression spanning multiple lines.",
          "cop_name": "Style/MultilineMethodCallIndentation",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Expression at 56, 19 should be on its own line.",
          "cop_name": "Style/BlockEndNewline",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 66,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 68,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 9,
            "length": 83
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 14,
            "length": 157
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 52,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 52,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 9,
            "length": 111
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 94,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 55,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for selectExactComboValueInElement is too high. [30/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [37/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 5,
            "length": 2558
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 98,
            "column": 9,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 60,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 105,
            "column": 7,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Avoid using `{...}` for multi-line blocks.",
          "cop_name": "Style/BlockDelimiters",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Block body expression is on the same line as the block start.",
          "cop_name": "Style/MultilineBlockLayout",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 20,
            "length": 139
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 106,
            "column": 21,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 34,
            "length": 106
          }
        },
        {
          "severity": "convention",
          "message": "Indent the first parameter one step more than the start of the previous line.",
          "cop_name": "Style/FirstParameterIndentation",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 11,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indenting an expression spanning multiple lines.",
          "cop_name": "Style/MultilineMethodCallIndentation",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Expression at 109, 19 should be on its own line.",
          "cop_name": "Style/BlockEndNewline",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 116,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 68,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 9,
            "length": 83
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 14,
            "length": 157
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 52,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 52,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Favor `unless` over `if` for negative conditions.",
          "cop_name": "Style/NegatedIf",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 9,
            "length": 111
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 144,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 55,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 151,
            "column": 9,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 151,
            "column": 26,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 158,
            "column": 9,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 158,
            "column": 31,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 166,
            "column": 9,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 170,
            "column": 9,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 174,
            "column": 9,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Align the parameters of a method call if they span more than one line.",
          "cop_name": "Style/AlignParameters",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 17,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 183,
            "column": 9,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 17,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 7,
            "length": 50
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 7,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 198,
            "column": 9,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 198,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 44,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 60,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 20,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 58,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 204,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for fill_in_all is too high. [29.75/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 228,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for fill_in_all is too high. [11/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 228,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [16/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 228,
            "column": 5,
            "length": 872
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for fill_in_all is too high. [12/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 228,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 228,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 12,
            "length": 63
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 231,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `elsif`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 232,
            "column": 15,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 233,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `elsif`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 234,
            "column": 15,
            "length": 77
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 235,
            "column": 45,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `elsif`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 237,
            "column": 15,
            "length": 63
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 246,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body end.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 248,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/page_objects/extjs_table.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at module body beginning.",
          "cop_name": "Style/EmptyLinesAroundModuleBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 10,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 6,
            "column": 15,
            "length": 87
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 5,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for getRowByRowData is too high. [23.43/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [25/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 5,
            "length": 828
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 17,
            "column": 9,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 18,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 10,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Prefer the use of the `nil?` predicate.",
          "cop_name": "Style/NilComparison",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 20,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use `empty?` instead of `length == 0`.",
          "cop_name": "Style/ZeroLengthPredicate",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 30,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 15,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Use array literal `[]` instead of `Array.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 23,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 26,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Use hash literal `{}` instead of `Hash.new`.",
          "cop_name": "Style/EmptyLiteral",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 23,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 9,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 11,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 14,
            "length": 55
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 12,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around a variable.",
          "cop_name": "Style/RedundantParentheses",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 12,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 7,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 47,
            "column": 9,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 10,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 9,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 9,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 19,
            "length": 14
          }
        },
        {
          "severity": "warning",
          "message": "Unused method argument - `header`. If it's necessary, use `_` or `_header` as an argument name to indicate that it won't be used. You can also write as `find_header(*)` if you want the method to accept any arguments but don't care about them.",
          "cop_name": "Lint/UnusedMethodArgument",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 21,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use parentheses for method calls with no arguments.",
          "cop_name": "Style/MethodCallParentheses",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Shadowing outer local variable - `header`.",
          "cop_name": "Lint/ShadowingOuterLocalVariable",
          "corrected": null,
          "location": {
            "line": 81,
            "column": 26,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Favor modifier `if` usage when having a single-line body. Another good alternative is the usage of control flow `&&`/`||`.",
          "cop_name": "Style/IfUnlessModifier",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 9,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use if x; Use the ternary operator instead.",
          "cop_name": "Style/IfWithSemicolon",
          "corrected": null,
          "location": {
            "line": 82,
            "column": 9,
            "length": 46
          }
        },
        {
          "severity": "convention",
          "message": "Space found before semicolon.",
          "cop_name": "Style/SpaceBeforeSemicolon",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before semicolon.",
          "cop_name": "Style/SpaceBeforeSemicolon",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use self-assignment shorthand `+=`.",
          "cop_name": "Style/SelfAssignment",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 9,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 3,
            "length": 36
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 3,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/common/page_objects/radio_group.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Don't use parentheses around the condition of an `if`.",
          "cop_name": "Style/ParenthesesAroundCondition",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 28,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/pages/action_builder_objects/action_builder_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [307/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 10226
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for input_field is too high. [10/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [22/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 19,
            "column": 3,
            "length": 660
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 21,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 33,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for dragged_control is too high. [10/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [22/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 44,
            "column": 3,
            "length": 1049
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 54,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 15,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 142,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 97,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 102,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 161,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 162,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 182,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 190,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 197,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 198,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 217,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 227,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 231,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 234,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 235,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 239,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 243,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 246,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 247,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 3,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 251,
            "column": 3,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 252,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 261,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 263,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 263,
            "column": 7,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 264,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 266,
            "column": 3,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 267,
            "column": 3,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 268,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 269,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 272,
            "column": 3,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 273,
            "column": 3,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 274,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 277,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 277,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 278,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 280,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 280,
            "column": 7,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 281,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 283,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 283,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 284,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 286,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 286,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 287,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 289,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 289,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 290,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 293,
            "column": 2,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 294,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 294,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 295, 2 is not aligned with `def` at 293, 1.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 297,
            "column": 2,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 297,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 298,
            "column": 2,
            "length": 3
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 299, 2 is not aligned with `def` at 297, 1.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 299,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 307,
            "column": 18,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 309,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 18,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 313,
            "column": 18,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 315,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 315,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 318,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 318,
            "column": 5,
            "length": 118
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 318,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 320, 2 is not aligned with `def` at 318, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 320,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 321,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 321,
            "column": 4,
            "length": 129
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 321,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 323, 2 is not aligned with `def` at 321, 3.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 323,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 324,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 324,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 327,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 327,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 328,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 328,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 333,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 333,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 334,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 336,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 337,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 337,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 337,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 340,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 340,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 343,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 343,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 347,
            "column": 18,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 349,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 350,
            "column": 18,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 352,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 353,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 353,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 359,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 360,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 360,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 364,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 367,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 367,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 373,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 376,
            "column": 3,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "lib/pages/api_integrator_objects/api_integrator_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [316/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 1,
            "length": 10386
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 17,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 4,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 148,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 161,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 161,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 41,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 192,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 196,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 200,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 201,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 218,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 223,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 227,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 229,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 232,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 233,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 235,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 239,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 244,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 245,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 245,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 245,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 247,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 248,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 251,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 254,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 256,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 259,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 260,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 262,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 263,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 263,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 265,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 266,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 268,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 269,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 271,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 272,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 272,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 272,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 274,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 275,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 277,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 278,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 278,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 279,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 281,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 282,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 285,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 287,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 289,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 291,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 295,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 299,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 299,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 299,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 302,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 303,
            "column": 1,
            "length": 106
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 303,
            "column": 5,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 304,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 306,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 306,
            "column": 1,
            "length": 109
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 306,
            "column": 5,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 307,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 309,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 309,
            "column": 1,
            "length": 85
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 309,
            "column": 5,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 310,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 312,
            "column": 1,
            "length": 61
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 312,
            "column": 5,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 313,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 315,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 315,
            "column": 1,
            "length": 102
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 315,
            "column": 5,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 316,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 318,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 318,
            "column": 1,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 318,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 319,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 323,
            "column": 1,
            "length": 116
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 323,
            "column": 5,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 324,
            "column": 1,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 324,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 327,
            "column": 1,
            "length": 128
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 327,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 328,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 328,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 1,
            "length": 150
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 331,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 332,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 335,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 339,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 340,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 343,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 344,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 348,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 352,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 354,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 355,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 5,
            "length": 60
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 358,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 358,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 359, 2 is not aligned with `def` at 357, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 359,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 365,
            "column": 5,
            "length": 74
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 365,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 367, 2 is not aligned with `def` at 365, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 367,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 5,
            "length": 80
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 368,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 370, 2 is not aligned with `def` at 368, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 370,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 372,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 373,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 377,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 379,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 379,
            "column": 4,
            "length": 71
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 380,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 380,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 381, 2 is not aligned with `def` at 379, 3.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 381,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 382,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 382,
            "column": 4,
            "length": 68
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 383,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 384, 2 is not aligned with `def` at 382, 3.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 384,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 387,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 391,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 395,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 397,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "1 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 399,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "lib/pages/common_objects/common_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [174/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5988
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 3,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 17,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 34,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 46,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 50,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 74,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 98,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 27,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 38,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 146,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Align `elsif` with `if`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Align `elsif` with `if`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 7,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Align `else` with `if`.",
          "cop_name": "Style/ElseAlignment",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 7,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 10,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for application_url is too high. [8/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 165,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [16/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 165,
            "column": 3,
            "length": 480
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 10,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 7,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 10,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 7,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 10,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 7,
            "length": 27
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 34,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 10,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 7,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 10,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 7,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 10,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 10,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `self` detected.",
          "cop_name": "Style/RedundantSelf",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 186,
            "column": 18,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 194,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "5 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 1,
            "length": 5
          }
        }
      ]
    },
    {
      "path": "lib/pages/common_objects/new_common_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/pages/e_view_objects/e_view_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 22,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 25,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 26,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 28,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 29,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 31,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 35,
            "column": 7,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 38,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 38,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body end.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 41,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 42,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/pages/process_builder_objects/process_builder_methods.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [201/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 8219
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [11/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 34,
            "column": 3,
            "length": 395
          }
        },
        {
          "severity": "convention",
          "message": "Perceived complexity for validate_action_name is too high. [8/7]",
          "cop_name": "Metrics/PerceivedComplexity",
          "corrected": null,
          "location": {
            "line": 34,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use the return of the conditional for variable assignment and comparison.",
          "cop_name": "Style/ConditionalAssignment",
          "corrected": false,
          "location": {
            "line": 37,
            "column": 7,
            "length": 205
          }
        },
        {
          "severity": "convention",
          "message": "Use `tr` instead of `gsub`.",
          "cop_name": "Performance/StringReplacement",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 62,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Assignment Branch Condition size for search_box_behavior is too high. [207.8/15]",
          "cop_name": "Metrics/AbcSize",
          "corrected": null,
          "location": {
            "line": 102,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Cyclomatic complexity for search_box_behavior is too high. [7/6]",
          "cop_name": "Metrics/CyclomaticComplexity",
          "corrected": null,
          "location": {
            "line": 102,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [83/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 102,
            "column": 3,
            "length": 4569
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 6,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 59,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 59,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 69,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 189,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 203,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 204,
            "column": 7,
            "length": 48
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 204,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 210,
            "column": 7,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 211,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 212,
            "column": 7,
            "length": 41
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 212,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 218,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 218,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `begin` block detected.",
          "cop_name": "Style/RedundantBegin",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 5,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 7,
            "length": 39
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 11,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 8,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 1,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "lib/pages/process_builder_objects/process_builder_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [1331/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 44818
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 7,
            "column": 7,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 24,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 28,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 32,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 36,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 39,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 43,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 47,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 48,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 51,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 52,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 71,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 75,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 99,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 103,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 132,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 140,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 18,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Missing space after #.",
          "cop_name": "Style/LeadingCommentSpace",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 3,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 147,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 151,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 160,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 164,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 127,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 187,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 191,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 193,
            "column": 107,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 197,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 198,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 198,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 198,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 201,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 202,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 206,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 209,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 209,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 97,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 210,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 217,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 18,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 229,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 233,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 234,
            "column": 18,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 237,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 238,
            "column": 18,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 241,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 242,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 245,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 246,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 249,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 250,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 253,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 254,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 257,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 258,
            "column": 18,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 261,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 269,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 270,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 273,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 274,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 277,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 278,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 281,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 282,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 285,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 289,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 293,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 297,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 301,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 302,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 305,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 306,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 309,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 313,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 314,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 314,
            "column": 53,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 317,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 321,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 322,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 325,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 329,
            "column": 26,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 329,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 330,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 333,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 337,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 341,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 342,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 345,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 346,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 349,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 350,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 353,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 354,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 357,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 358,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 361,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 362,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 365,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 366,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 369,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 370,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 373,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 374,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 377,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 378,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 381,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 382,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 382,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 385,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 389,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 390,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 393,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 394,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 397,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 398,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 401,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 402,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 405,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 409,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 410,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 411,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 415,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 415,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 415,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 419,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 419,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 419,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 422,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 423,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 426,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 427,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 430,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 431,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 434,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 435,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 438,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 439,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 442,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 443,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 446,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 450,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 454,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 455,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 458,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 459,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 462,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 463,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 466,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 467,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 470,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 471,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 471,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 474,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 475,
            "column": 78,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 478,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 479,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 482,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 486,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 96,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 487,
            "column": 123,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 490,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 491,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 491,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 491,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 491,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 494,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 495,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Method has too many lines. [14/10]",
          "cop_name": "Metrics/MethodLength",
          "corrected": null,
          "location": {
            "line": 498,
            "column": 3,
            "length": 403
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 498,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 499,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 500,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 501,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 502,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 503,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 504,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 505,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 506,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 507,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Indent `when` as deep as `case`.",
          "cop_name": "Style/CaseIndentation",
          "corrected": false,
          "location": {
            "line": 508,
            "column": 5,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 509,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Always use `raise` to signal exceptions.",
          "cop_name": "Style/SignalException",
          "corrected": false,
          "location": {
            "line": 511,
            "column": 7,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 515,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 516,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 516,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 516,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 516,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 519,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 520,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 523,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 523,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 524,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 527,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 527,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 528,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 531,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 531,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 532,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 535,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 535,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 536,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 538,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 538,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 539,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 542,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 543,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 546,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 547,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 550,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 551,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 554,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 555,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 558,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 559,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 562,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 563,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 566,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 567,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 570,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 571,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 571,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 574,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 575,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 578,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 579,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 579,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 582,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 583,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 583,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 586,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 590,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 591,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 591,
            "column": 69,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 591,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 594,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 598,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 602,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 606,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 610,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 614,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 618,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 622,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 623,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 623,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 623,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 626,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 630,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 634,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 638,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 642,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 647,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 650,
            "column": 7,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 651,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 654,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 655,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 658,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 659,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 659,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 662,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 663,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 666,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 667,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 670,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 671,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 675,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 676,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 676,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 676,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 676,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 680,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 680,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 684,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 684,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 691,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 692,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 692,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 692,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 692,
            "column": 101,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 108,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 708,
            "column": 114,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 716,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 716,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 720,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 720,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 723,
            "column": 7,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 723,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 724,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 724,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 724,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 736,
            "column": 119,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 751,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 753,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 753,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 759,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 762,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 786,
            "column": 12,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 787,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 787,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 790,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 791,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 794,
            "column": 10,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 795,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 798,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 799,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 799,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 799,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 802,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 803,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 806,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 807,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 807,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 807,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 807,
            "column": 92,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 810,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 811,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 811,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 811,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 811,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 814,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 815,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 815,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 818,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 819,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 819,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 821,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 821,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 822,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 822,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 822,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 825,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 826,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 826,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 826,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 826,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 829,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 830,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 830,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 830,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 830,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 833,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 834,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 834,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 834,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 834,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 837,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 838,
            "column": 86,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 841,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 62,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 842,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 844,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 845,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 845,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 847,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 848,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 850,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 851,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 853,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 854,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 856,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 857,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 857,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 857,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 859,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 860,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 860,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 860,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 862,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 863,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 866,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 867,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 867,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 869,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 869,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 870,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 870,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 872,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 872,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 876,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 877,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 879,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 880,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 881,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 883,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 883,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 884,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 886,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 886,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 887,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 887,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 889,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 890,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 891,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 893,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 893,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 894,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 897,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 898,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 899,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 899,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 901,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 901,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 902,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 902,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 902,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 904,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 904,
            "column": 36,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 905,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 908,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 909,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 912,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 913,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 913,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 913,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 913,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 915,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 916,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 919,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 919,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 922,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 922,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 925,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 925,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 928,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 928,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 931,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 932,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 933,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 933,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 933,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 933,
            "column": 90,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 935,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 935,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 67,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 936,
            "column": 94,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 938,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 938,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 939,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 939,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 941,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 943,
            "column": 7,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 943,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 944,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 944,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 946,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 946,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 946,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 947,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 949,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 949,
            "column": 7,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 949,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 950,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 952,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 952,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 953,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 957,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 961,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 964,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 965,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 968,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body beginning.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 969,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 970,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 970,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 973,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 974,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 977,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 978,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 981,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 982,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 985,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 986,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 990,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 994,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 998,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1000,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1000,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1001,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1003,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1004,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1007,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1008,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1010,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1010,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1011,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1011,
            "column": 99,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1011,
            "column": 115,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1015,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1019,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1019,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1023,
            "column": 102,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1026,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1030,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1033,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1033,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1034,
            "column": 118,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1034,
            "column": 124,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1036,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1036,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1037,
            "column": 111,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1037,
            "column": 117,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1040,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1048,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1050,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1051,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1054,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1058,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1060,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1060,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1062,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1062,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1062,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1063,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1065,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1065,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1066,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1068,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1068,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1069,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1071,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 5) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1074,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1074,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1074,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1074,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1077,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1077,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 5) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1078,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1078,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1081,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1082,
            "column": 3,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1082,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1085,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1088,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1092,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1096,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1099,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1102,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1102,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1105,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1105,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1108,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1108,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1111,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1113,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1113,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1115,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1115,
            "column": 7,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1115,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1116,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1118,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1118,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1118,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1119,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1120,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1122,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1122,
            "column": 15,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1123,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1126,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1128,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1129,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1132,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1133,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1133,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1133,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1133,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1133,
            "column": 74,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1133,
            "column": 83,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1135,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1136,
            "column": 7,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1136,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1137,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1137,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1137,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1139,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1141,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1142,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1142,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1142,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1145,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Combine 'SOURCE+' and \":\" into a single string literal, rather than using implicit string concatenation. Or, if they were intended to be separate method arguments, separate them with a comma.",
          "cop_name": "Lint/ImplicitStringConcatenation",
          "corrected": null,
          "location": {
            "line": 1146,
            "column": 10,
            "length": 12
          }
        },
        {
          "severity": "warning",
          "message": "Combine \":\" and '+$api_name+\"_process\" =' into a single string literal, rather than using implicit string concatenation. Or, if they were intended to be separate method arguments, separate them with a comma.",
          "cop_name": "Lint/ImplicitStringConcatenation",
          "corrected": null,
          "location": {
            "line": 1146,
            "column": 19,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 19,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 54,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1146,
            "column": 59,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 68,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1146,
            "column": 69,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1147,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1147,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1147,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1147,
            "column": 28,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1147,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1147,
            "column": 38,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at method body end.",
          "cop_name": "Style/EmptyLinesAroundMethodBody",
          "corrected": false,
          "location": {
            "line": 1148,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1151,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1152,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1156,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1160,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1161,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1161,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1161,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1164,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1165,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1165,
            "column": 106,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1165,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1168,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1169,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1169,
            "column": 73,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1171,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1172,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1172,
            "column": 71,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1174,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1175,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1175,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1177,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1177,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1180,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1182,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1184,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1185,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1187,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1188,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1190,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1191,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1193,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1194,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1197,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1198,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1199,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1201,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1201,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1202,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1203, 3 is not aligned with `def` at 1201, 2.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1203,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1204,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1204,
            "column": 32,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1205,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1207,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1207,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1208,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1210,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1210,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1211,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1213,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1213,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1214,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1216,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1216,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1217,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1217,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1217,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1221,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1223,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1224,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1226,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1227,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1229,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1230,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1232,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1233,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1235,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1236,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1238,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1239,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1241,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1242,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1243,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1245,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1247,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1249,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1250,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1252,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1253,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1255,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1256,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1258,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1259,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1260,
            "column": 18,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1262,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1262,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1262,
            "column": 22,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1263,
            "column": 122,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1263,
            "column": 134,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1265,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1265,
            "column": 7,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1265,
            "column": 20,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1266,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1266,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1269,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1270,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1270,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 6) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 3,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not introduce global variables.",
          "cop_name": "Style/GlobalVars",
          "corrected": null,
          "location": {
            "line": 1271,
            "column": 52,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 63,
            "length": 7
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 83,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 104,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 105,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 110,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 121,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1271,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1274,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1275,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1278,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1279,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1282,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1283,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1283,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1284,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1287,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1287,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1288,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1291,
            "column": 7,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1295,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1298,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1298,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1299,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1302,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1306,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1310,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1310,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1311,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1314,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1314,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1315,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1318,
            "column": 7,
            "length": 18
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1322,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1325,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1327,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1329,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1330,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1332,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1333,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1335,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1336,
            "column": 1,
            "length": 93
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1336,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1337,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1338, 2 is not aligned with `def` at 1336, 0.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1338,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1339,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1340,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1344,
            "column": 7,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1347,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1349,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1352,
            "column": 7,
            "length": 29
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1353,
            "column": 14,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1355,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1355,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1356,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1358,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1358,
            "column": 7,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1359,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1361,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1361,
            "column": 7,
            "length": 37
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1362,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1364,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1366,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1369,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1369,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1370,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1373,
            "column": 1,
            "length": 73
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1373,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1374,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1374,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1377,
            "column": 1,
            "length": 65
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1377,
            "column": 5,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1378,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1379, 2 is not aligned with `def` at 1377, 0.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1379,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1381,
            "column": 7,
            "length": 16
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1381,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1382,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1382,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1382,
            "column": 133,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1382,
            "column": 146,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1385,
            "column": 7,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1389,
            "column": 7,
            "length": 13
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1393,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1394,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1394,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1394,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1397,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1398,
            "column": 87,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1400,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1401,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1401,
            "column": 50,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1404,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1405,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1405,
            "column": 4,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1405,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1405,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1408,
            "column": 7,
            "length": 10
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1409,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1409,
            "column": 17,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1409,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1411,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1411,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1412,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1412,
            "column": 17,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1412,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1414,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1414,
            "column": 7,
            "length": 20
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1415,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1415,
            "column": 17,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1415,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1416, 4 is not aligned with `def` at 1414, 2.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1416,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1417,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1418,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1418,
            "column": 61,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1421,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1422,
            "column": 7,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1423,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1423,
            "column": 17,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1423,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1425,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1426,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1426,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1428,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1429,
            "column": 7,
            "length": 22
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1430,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1430,
            "column": 17,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1430,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1434,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space inside parentheses detected.",
          "cop_name": "Style/SpaceInsideParens",
          "corrected": false,
          "location": {
            "line": 1434,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1437,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1438,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1438,
            "column": 84,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1438,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1441,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1442,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1442,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1442,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1442,
            "column": 93,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1444,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1445,
            "column": 82,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1445,
            "column": 98,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1449,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1451,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1452,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1454,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1455,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1458,
            "column": 1,
            "length": 126
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1459,
            "column": 71,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1459,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1461,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1463,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1463,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1463,
            "column": 63,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1465,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1465,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1466,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1467,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1468,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1469,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1470,
            "column": 18,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1472,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1472,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1473,
            "column": 18,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1476,
            "column": 5,
            "length": 195
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1476,
            "column": 9,
            "length": 17
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1476,
            "column": 27,
            "length": 11
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1477,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1477,
            "column": 113,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1477,
            "column": 125,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1478, 2 is not aligned with `def` at 1476, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1478,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1480,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1481,
            "column": 18,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1482,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1484,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1484,
            "column": 25,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1488,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1489,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1490,
            "column": 1,
            "length": 90
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1490,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1491,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1492,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1494,
            "column": 1,
            "length": 89
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1494,
            "column": 27,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1495,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1496,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1498,
            "column": 1,
            "length": 87
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1498,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1499,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1500,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1502,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1503,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1504,
            "column": 1,
            "length": 89
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1508,
            "column": 1,
            "length": 109
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1512,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1513,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1514,
            "column": 1,
            "length": 87
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1518,
            "column": 1,
            "length": 111
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1522,
            "column": 1,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1523,
            "column": 16,
            "length": 19
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1526,
            "column": 1,
            "length": 69
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1527,
            "column": 16,
            "length": 34
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1530,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1531,
            "column": 1,
            "length": 94
          }
        },
        {
          "severity": "convention",
          "message": "Do not prefix writer method names with `set_`.",
          "cop_name": "Style/AccessorMethodName",
          "corrected": null,
          "location": {
            "line": 1531,
            "column": 5,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 4) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1532,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1532,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1532,
            "column": 56,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1532,
            "column": 63,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1535,
            "column": 1,
            "length": 70
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1539,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1540,
            "column": 1,
            "length": 62
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1541,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1541,
            "column": 4,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Prefer single-quoted strings when you don't need string interpolation or special symbols.",
          "cop_name": "Style/StringLiterals",
          "corrected": false,
          "location": {
            "line": 1541,
            "column": 11,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1545,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1546,
            "column": 1,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 1549,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1550,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1551,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1553,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1553,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1554,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1557,
            "column": 5,
            "length": 176
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1557,
            "column": 44,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1558,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1558,
            "column": 100,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1558,
            "column": 116,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1559, 2 is not aligned with `def` at 1557, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1559,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1561,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1562,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1564,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1564,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1565,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1568,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1569,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1571,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1572,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1573,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for variable names.",
          "cop_name": "Style/VariableName",
          "corrected": null,
          "location": {
            "line": 1576,
            "column": 24,
            "length": 12
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1576,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1577,
            "column": 76,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1577,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1580,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1581,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1584,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1585,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1586,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1588,
            "column": 45,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1589,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 1589,
            "column": 4,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1589,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1589,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1589,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1589,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1591,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1591,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1592,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1595,
            "column": 7,
            "length": 30
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1595,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1596,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1598,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1598,
            "column": 5,
            "length": 85
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1598,
            "column": 9,
            "length": 28
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1598,
            "column": 37,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1599,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1599,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1600, 2 is not aligned with `def` at 1598, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1600,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1601,
            "column": 4,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1601,
            "column": 4,
            "length": 101
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1601,
            "column": 8,
            "length": 33
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1601,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1602,
            "column": 4,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1602,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1603, 2 is not aligned with `def` at 1601, 3.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1603,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1604,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1604,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1604,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1605,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1607,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1607,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1607,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1608,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1609,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1610,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1610,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1610,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1611,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1612,
            "column": 6,
            "length": 8
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1614,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1614,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1615,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1615,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1616,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1617,
            "column": 1,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1618,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1618,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1619,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1621,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1621,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1621,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1622,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1624,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1624,
            "column": 7,
            "length": 21
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1624,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1625,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1627,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1627,
            "column": 5,
            "length": 138
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1627,
            "column": 9,
            "length": 25
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1627,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1628,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1628,
            "column": 60,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1628,
            "column": 72,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1629, 2 is not aligned with `def` at 1627, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1629,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1630,
            "column": 5,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Inconsistent indentation detected.",
          "cop_name": "Style/IndentationConsistency",
          "corrected": false,
          "location": {
            "line": 1630,
            "column": 5,
            "length": 65
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1630,
            "column": 9,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1630,
            "column": 33,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1631,
            "column": 5,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1631,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 1632, 2 is not aligned with `def` at 1630, 4.",
          "cop_name": "Lint/DefEndAlignment",
          "corrected": false,
          "location": {
            "line": 1632,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1632,
            "column": 6,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1634,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1635,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1635,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1636,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1638,
            "column": 7,
            "length": 15
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1638,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1639,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1639,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1640,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1642,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1642,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1643,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1643,
            "column": 18,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1645,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1645,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1646,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1646,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1647,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1649,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1650,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1650,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1651,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1652,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1653,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 3) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1654,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1654,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1655,
            "column": 6,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1657,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1657,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1658,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1658,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1658,
            "column": 51,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1660,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1660,
            "column": 7,
            "length": 26
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1660,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1661,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1661,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1661,
            "column": 42,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1663,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1663,
            "column": 7,
            "length": 24
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1663,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1664,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1664,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1664,
            "column": 52,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1666,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1666,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1666,
            "column": 36,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1667,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1667,
            "column": 75,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1667,
            "column": 81,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1670,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1671,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1673,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1674,
            "column": 40,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 0) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 1675,
            "column": 3,
            "length": 0
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1675,
            "column": 64,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1675,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1678,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 1679,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1680,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1682,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1683,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1683,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1683,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1685,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 1685,
            "column": 7,
            "length": 32
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1686,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1686,
            "column": 43,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1686,
            "column": 55,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1686,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 1686,
            "column": 77,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1688,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1690,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1692,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1693,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1695,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1697,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 1699,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1700,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 1702,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 1704,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 1706,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/pages/role_management_objects/role_management_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 8,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 20,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use empty lines between method definitions.",
          "cop_name": "Style/EmptyLineBetweenDefs",
          "corrected": false,
          "location": {
            "line": 22,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Space found before comma.",
          "cop_name": "Style/SpaceBeforeComma",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 59,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 65,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 25,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/pages/variable_builder_objects/variable_builder_methods.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Tab detected.",
          "cop_name": "Style/Tab",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Tab detected.",
          "cop_name": "Style/Tab",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 2,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use `&&` instead of `and`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 25,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Use `&&` instead of `and`.",
          "cop_name": "Style/AndOr",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 54,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Tab detected.",
          "cop_name": "Style/Tab",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/pages/variable_builder_objects/variable_builder_objects.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [173/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5261
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 1,
            "column": 1,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Extra empty line detected at class body beginning.",
          "cop_name": "Style/EmptyLinesAroundClassBody",
          "corrected": false,
          "location": {
            "line": 2,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 3,
            "column": 16,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 4,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 7,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 15,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 16,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 19,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 23,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 31,
            "column": 25,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 35,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 40,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 44,
            "column": 48,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use 2 (not 1) spaces for indentation.",
          "cop_name": "Style/IndentationWidth",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 3,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 74,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 85,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 68,
            "column": 5,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 46,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 57,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 24,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 96,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 100,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 79,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 88,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 80,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 89,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 38,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 47,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 39,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 1,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 31,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 20,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Redundant `return` detected.",
          "cop_name": "Style/RedundantReturn",
          "corrected": false,
          "location": {
            "line": 159,
            "column": 5,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 162,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 66,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 163,
            "column": 70,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Extra blank line detected.",
          "cop_name": "Style/EmptyLines",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 1,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 167,
            "column": 7,
            "length": 23
          }
        },
        {
          "severity": "convention",
          "message": "Use snake_case for method names.",
          "cop_name": "Style/MethodName",
          "corrected": null,
          "location": {
            "line": 175,
            "column": 7,
            "length": 14
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 17,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 188,
            "column": 22,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 35,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `+`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 205,
            "column": 41,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 216,
            "column": 21,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 26,
            "length": 1
          }
        },
        {
          "severity": "warning",
          "message": "Method `VariableBuilderObjects#cancel` is defined at both D:/aricV3/lib/pages/variable_builder_objects/variable_builder_objects.rb:84 and D:/aricV3/lib/pages/variable_builder_objects/variable_builder_objects.rb:224.",
          "cop_name": "Lint/DuplicateMethods",
          "corrected": null,
          "location": {
            "line": 224,
            "column": 3,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 13,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 228,
            "column": 28,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Do not use semicolons to terminate expressions.",
          "cop_name": "Style/Semicolon",
          "corrected": false,
          "location": {
            "line": 232,
            "column": 30,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "1 trailing blank lines detected.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 236,
            "column": 1,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "lib/web_pages/aric/action_builder/action_builder_create.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Final newline missing.",
          "cop_name": "Style/TrailingBlankLines",
          "corrected": false,
          "location": {
            "line": 12,
            "column": 4,
            "length": 0
          }
        }
      ]
    },
    {
      "path": "lib/web_pages/aric/api_integrator/api_integrator_create.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 9,
            "length": 3
          }
        },
        {
          "severity": "convention",
          "message": "Put one space between the method name and the first argument.",
          "cop_name": "Style/SpaceBeforeFirstArg",
          "corrected": false,
          "location": {
            "line": 9,
            "column": 9,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 9,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Put one space between the method name and the first argument.",
          "cop_name": "Style/SpaceBeforeFirstArg",
          "corrected": false,
          "location": {
            "line": 10,
            "column": 9,
            "length": 2
          }
        }
      ]
    },
    {
      "path": "lib/web_pages/aric/login.rb",
      "offenses": []
    },
    {
      "path": "lib/web_pages/aric/process_builder/process_builder_edit.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [232/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 3,
            "length": 20414
          }
        },
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 2,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 5,
            "column": 19,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 34,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 35,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 43,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 35,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 38,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 36,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 43,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 25,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 48,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 34,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 142,
            "column": 35,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Operator `=>` should be surrounded by a single space.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 143,
            "column": 40,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 144,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 145,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 149,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 150,
            "column": 36,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 166,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 167,
            "column": 37,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 168,
            "column": 35,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 38,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 169,
            "column": 114,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 170,
            "column": 38,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 171,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 172,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 173,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 174,
            "column": 40,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 175,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 176,
            "column": 37,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 177,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 178,
            "column": 38,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 179,
            "column": 40,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 180,
            "column": 37,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 181,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 182,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 183,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 184,
            "column": 125,
            "length": 4
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 185,
            "column": 95,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 211,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 212,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 213,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 214,
            "column": 28,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 215,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 216,
            "column": 28,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 217,
            "column": 38,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 218,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 219,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 220,
            "column": 39,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 221,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 222,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 223,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 224,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 225,
            "column": 23,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 226,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 227,
            "column": 24,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 228,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 229,
            "column": 24,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 230,
            "column": 25,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 231,
            "column": 43,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 232,
            "column": 31,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 233,
            "column": 22,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 234,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "warning",
          "message": "`end` at 235, 1 is not aligned with `class` at 2, 2.",
          "cop_name": "Lint/EndAlignment",
          "corrected": false,
          "location": {
            "line": 235,
            "column": 2,
            "length": 3
          }
        }
      ]
    },
    {
      "path": "lib/web_pages/aric/process_builder/process_builder_home.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Class has too many lines. [154/100]",
          "cop_name": "Metrics/ClassLength",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 3,
            "length": 10631
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 27,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 55,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 56,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 57,
            "column": 24,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 58,
            "column": 26,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 59,
            "column": 21,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 60,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 61,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 62,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 63,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 64,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 65,
            "column": 23,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 66,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 67,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 19,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 69,
            "column": 23,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Surrounding space missing for operator `=>`.",
          "cop_name": "Style/SpaceAroundOperators",
          "corrected": false,
          "location": {
            "line": 70,
            "column": 40,
            "length": 2
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 72,
            "column": 33,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 73,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 76,
            "column": 34,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 77,
            "column": 23,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 78,
            "column": 35,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 79,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 80,
            "column": 31,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 81,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 82,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 83,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 84,
            "column": 27,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 85,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 86,
            "column": 34,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 87,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 88,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 89,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 90,
            "column": 49,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 91,
            "column": 28,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 92,
            "column": 24,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 93,
            "column": 20,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 94,
            "column": 23,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 95,
            "column": 29,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Unnecessary spacing detected.",
          "cop_name": "Style/ExtraSpacing",
          "corrected": false,
          "location": {
            "line": 101,
            "column": 29,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 104,
            "column": 58,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 105,
            "column": 35,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 106,
            "column": 31,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 107,
            "column": 31,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 108,
            "column": 33,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 109,
            "column": 33,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 110,
            "column": 32,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 111,
            "column": 31,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 112,
            "column": 25,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 113,
            "column": 28,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 114,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 115,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 116,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 117,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 118,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 119,
            "column": 20,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 120,
            "column": 23,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 121,
            "column": 39,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 122,
            "column": 31,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 123,
            "column": 36,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 124,
            "column": 34,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 125,
            "column": 25,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 126,
            "column": 24,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 127,
            "column": 35,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 128,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 129,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 130,
            "column": 27,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 131,
            "column": 30,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 132,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 133,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 134,
            "column": 26,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 135,
            "column": 28,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 136,
            "column": 38,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 137,
            "column": 29,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 138,
            "column": 33,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 139,
            "column": 35,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 140,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 141,
            "column": 31,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 152,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 153,
            "column": 25,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 154,
            "column": 27,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 155,
            "column": 26,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 156,
            "column": 32,
            "length": 9
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 157,
            "column": 30,
            "length": 6
          }
        },
        {
          "severity": "convention",
          "message": "Use the new Ruby 1.9 hash syntax.",
          "cop_name": "Style/HashSyntax",
          "corrected": false,
          "location": {
            "line": 158,
            "column": 34,
            "length": 6
          }
        }
      ]
    },
    {
      "path": "lib/web_pages/aric/variable_builder/variable_builder_create.rb",
      "offenses": [
        {
          "severity": "convention",
          "message": "Missing top-level class documentation comment.",
          "cop_name": "Style/Documentation",
          "corrected": null,
          "location": {
            "line": 3,
            "column": 3,
            "length": 5
          }
        },
        {
          "severity": "convention",
          "message": "Trailing whitespace detected.",
          "cop_name": "Style/TrailingWhitespace",
          "corrected": false,
          "location": {
            "line": 11,
            "column": 131,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after comma.",
          "cop_name": "Style/SpaceAfterComma",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 23,
            "length": 1
          }
        },
        {
          "severity": "convention",
          "message": "Space missing after colon.",
          "cop_name": "Style/SpaceAfterColon",
          "corrected": false,
          "location": {
            "line": 13,
            "column": 29,
            "length": 1
          }
        }
      ]
    },
    {
      "path": "lib/web_pages/aric.rb",
      "offenses": []
    }
  ],
  "summary": {
    "offense_count": 9249,
    "target_file_count": 52,
    "inspected_file_count": 52
  }
}
}